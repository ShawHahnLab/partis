[92mcache-parameters-data[0m            /home/dralph/work/partis/bin/partis cache-parameters --dont-write-git-info --paired-loci --infname test/paired-data/all-seqs.fa --parameter-dir test/paired/new-results-slow/test/parameters/data --n-max-queries -1 --random-seed 1 --n-procs 10
  note: --paired-outdir is not set, so there will be no persistent record of the results (except the parameter directory).
[91mrun[0m /home/dralph/work/partis/bin/extract-pairing-info.py test/paired-data/all-seqs.fa /tmp/dralph/hmms/858511/meta.yaml
  extract_pairing_info(): read 100 sequences with 48 droplet ids
    droplet id separators (set automatically): _  indices: [0]
       e.g. uid 'AAACCTGAGAGACGAA-1_contig_2' --> droplet id 'AAACCTGAGAGACGAA-1' contig id '2'
    contigs per
      droplet     count   fraction
        1            2     0.042
        2           42     0.875
        3            2     0.042
        4            2     0.042
[91mrun[0m /home/dralph/work/partis/bin/split-loci.py test/paired-data/all-seqs.fa --outdir /tmp/dralph/hmms/858511 --input-metafname /tmp/dralph/hmms/858511/meta.yaml
  --input-metafnames: added meta info for 100 sequences from /tmp/dralph/hmms/858511/meta.yaml: paired-uids
    read pairing info for 100 seqs from input meta file
  running vsearch on 100 sequences:
    igh:   49 / 100 v annotations (51 failed) with 28 v genes in 0.1 sec
    igk:   40 / 100 v annotations (60 failed) with 18 v genes in 0.1 sec
    igl:   15 / 100 v annotations (85 failed) with 12 v genes in 0.1 sec
totals: igh 48 igk 37 igl 15
  removed 0 failed uids from paired_uids
            count  frac  paired with
       [94mh[0m      31   0.65   [95mk[0m
              11   0.23   [92ml[0m
               2   0.04   [94mh[0m [95mk[0m [92ml[0m
               2   0.04   [94mh[0m [95mk[0m [95mk[0m
               1   0.02   [92ml[0m [92ml[0m
               1   0.02   [95mk[0m [92ml[0m
       [95mk[0m      31   0.84   [94mh[0m
               2   0.05   
               2   0.05   [94mh[0m [94mh[0m [95mk[0m
               1   0.03   [94mh[0m [92ml[0m
               1   0.03   [94mh[0m [94mh[0m [92ml[0m
       [92ml[0m      11   0.73   [94mh[0m
               2   0.13   [94mh[0m [92ml[0m
               1   0.07   [94mh[0m [95mk[0m
               1   0.07   [94mh[0m [94mh[0m [95mk[0m
writing to /tmp/dralph/hmms/858511/
  igh: 48 to 858511/igh.fa
  igk: 37 to 858511/igk.fa
  igl: 15 to 858511/igl.fa
writing to paired subdirs
    36/48 igh seqs pair with igk
      igh: 36 to igh+igk/igh.fa
      igk: 37 to igh+igk/igk.fa
    15/48 igh seqs pair with igl
      igh: 15 to igh+igl/igh.fa
      igl: 15 to igh+igl/igl.fa
[44mcache-parameters[0m [94migh[0m:
[91mrun[0m /home/dralph/work/partis/bin/partis cache-parameters --locus igh --dont-write-git-info --infname /tmp/dralph/hmms/858511/igh.fa --parameter-dir test/paired/new-results-slow/test/parameters/data/igh --random-seed 1 --n-procs 10 --sw-cachefname test/paired/new-results-slow/test/parameters/data/igh/sw-cache.yaml --input-metafnames /tmp/dralph/hmms/858511/meta.yaml
  --input-metafnames: added meta info for 48 sequences from /tmp/dralph/hmms/858511/meta.yaml: paired-uids
caching parameters
  vsearch: 48 / 48 v annotations (0 failed) with 27 v genes in 0.1 sec
    keeping 23 / 198 v genes
smith-waterman  (new-allele fitting)
  vsearch: 48 / 48 v annotations (0 failed) with 23 v genes in 0.1 sec
  removing old sw cache test/paired/new-results-slow/test/parameters/data/igh/sw-cache.yaml
    running 10 procs for 48 seqs
      info for 48 / 48 = 1.000   (removed: 0 failed)
      kept 1 (0.021) unproductive
    water time: 0.1  (ig-sw 0.0  processing 0.1)
smith-waterman  (writing parameters)
  vsearch: 48 / 48 v annotations (0 failed) with 23 v genes in 0.1 sec
    running 10 procs for 48 seqs
      info for 48 / 48 = 1.000   (removed: 0 failed)
      kept 1 (0.021) unproductive
        writing sw results to test/paired/new-results-slow/test/parameters/data/igh/sw-cache.yaml
    writing parameters to test/paired/new-results-slow/test/parameters/data/igh/sw (1.9 sec)
    water time: 2.2  (ig-sw 2.1  processing 0.2)
  writing hmms     removed 13 genes from glfo (leaving v 23  d 19  j 6)
(0.2 sec)
hmm
    reading output
        read 48 hmm output lines with 48 sequences in 48 events  (0 failures)
    writing parameters to test/paired/new-results-slow/test/parameters/data/igh/hmm (1.6 sec)
         infra time: 1.7
      hmm step time: 2.2
  writing hmms     removed 1  genes from glfo (leaving v 23  d 18  j 6)
(0.2 sec)
      total time: 5.5
[44mcache-parameters[0m [94migk[0m:
[91mrun[0m /home/dralph/work/partis/bin/partis cache-parameters --locus igk --dont-write-git-info --infname /tmp/dralph/hmms/858511/igk.fa --parameter-dir test/paired/new-results-slow/test/parameters/data/igk --random-seed 1 --n-procs 10 --sw-cachefname test/paired/new-results-slow/test/parameters/data/igk/sw-cache.yaml --input-metafnames /tmp/dralph/hmms/858511/meta.yaml
  --input-metafnames: added meta info for 37 sequences from /tmp/dralph/hmms/858511/meta.yaml: paired-uids
caching parameters
  vsearch: 37 / 37 v annotations (0 failed) with 16 v genes in 0.1 sec
    keeping 16 / 64 v genes
smith-waterman  (new-allele fitting)
  vsearch: 37 / 37 v annotations (0 failed) with 16 v genes in 0.1 sec
  removing old sw cache test/paired/new-results-slow/test/parameters/data/igk/sw-cache.yaml
    running 10 procs for 37 seqs
      info for 37 / 37 = 1.000   (removed: 0 failed)
      kept 1 (0.027) unproductive
    water time: 0.1  (ig-sw 0.0  processing 0.1)
smith-waterman  (writing parameters)
  vsearch: 37 / 37 v annotations (0 failed) with 16 v genes in 0.1 sec
    running 10 procs for 37 seqs
      info for 37 / 37 = 1.000   (removed: 0 failed)
      kept 1 (0.027) unproductive
        writing sw results to test/paired/new-results-slow/test/parameters/data/igk/sw-cache.yaml
    writing parameters to test/paired/new-results-slow/test/parameters/data/igk/sw (1.3 sec)
    water time: 1.6  (ig-sw 1.5  processing 0.1)
  writing hmms     removed 0  genes from glfo (leaving v 16  d 1  j 7)
(0.1 sec)
hmm
    reading output
        read 37 hmm output lines with 37 sequences in 37 events  (0 failures)
    writing parameters to test/paired/new-results-slow/test/parameters/data/igk/hmm (1.1 sec)
         infra time: 1.2
      hmm step time: 1.4
  writing hmms     removed 0  genes from glfo (leaving v 16  d 1  j 7)
(0.1 sec)
      total time: 3.8
[44mcache-parameters[0m [94migl[0m:
[91mrun[0m /home/dralph/work/partis/bin/partis cache-parameters --locus igl --dont-write-git-info --infname /tmp/dralph/hmms/858511/igl.fa --parameter-dir test/paired/new-results-slow/test/parameters/data/igl --random-seed 1 --n-procs 10 --sw-cachefname test/paired/new-results-slow/test/parameters/data/igl/sw-cache.yaml --input-metafnames /tmp/dralph/hmms/858511/meta.yaml
  --input-metafnames: added meta info for 15 sequences from /tmp/dralph/hmms/858511/meta.yaml: paired-uids
caching parameters
  vsearch: 15 / 15 v annotations (0 failed) with 12 v genes in 0.1 sec
    keeping 10 / 80 v genes
smith-waterman  (new-allele fitting)
  vsearch: 15 / 15 v annotations (0 failed) with 10 v genes in 0.1 sec
  removing old sw cache test/paired/new-results-slow/test/parameters/data/igl/sw-cache.yaml
    running 10 procs for 15 seqs
      info for 15 / 15 = 1.000   (removed: 0 failed)
    water time: 0.1  (ig-sw 0.0  processing 0.1)
smith-waterman  (writing parameters)
  vsearch: 15 / 15 v annotations (0 failed) with 10 v genes in 0.0 sec
    running 10 procs for 15 seqs
      info for 15 / 15 = 1.000   (removed: 0 failed)
        writing sw results to test/paired/new-results-slow/test/parameters/data/igl/sw-cache.yaml
    writing parameters to test/paired/new-results-slow/test/parameters/data/igl/sw (1.0 sec)
    water time: 1.1  (ig-sw 1.0  processing 0.1)
  writing hmms     removed 6  genes from glfo (leaving v 10  d 1  j 3)
(0.1 sec)
hmm
    reading output
        read 15 hmm output lines with 15 sequences in 15 events  (0 failures)
    writing parameters to test/paired/new-results-slow/test/parameters/data/igl/hmm (0.7 sec)
         infra time: 0.7
      hmm step time: 0.9
  writing hmms     removed 0  genes from glfo (leaving v 10  d 1  j 3)
(0.1 sec)
      total time: 2.6
      [93mwarning[0m expected to remove 1/11 files+dirs that weren't in /tmp/dralph/hmms/858511/: failed.fa
      total time: 13.6
[92msimulate[0m                         /home/dralph/work/partis/bin/partis simulate --dont-write-git-info --paired-loci --parameter-dir test/paired/new-results-slow/test/parameters/data --n-sim-events 200 --n-trees 200 --n-leaf-distribution geometric --n-leaves 5 --min-observations-per-gene 5 --mean-cells-per-droplet 1.5 --constant-cells-per-droplet --fraction-of-reads-to-remove 0.15 --random-seed 1 --n-procs 10 --paired-outdir test/paired/new-results-slow/test/simu --indel-frequency 0.2
    cleaning paired files in test/paired/new-results-slow/test/simu/
[94migh+igk[0m: simulating 134 events
[44mgenerate-trees[0m [94migh+igk[0m:[94m igh[0m
[91mrun[0m /home/dralph/work/partis/bin/partis simulate --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/data/igh --n-trees 134 --n-leaf-distribution geometric --n-leaves 5 --min-observations-per-gene 5 --mean-cells-per-droplet 1.5 --constant-cells-per-droplet --fraction-of-reads-to-remove 0.15 --random-seed 177687104 --indel-frequency 0.2 --generate-trees --outfname test/paired/new-results-slow/test/simu/igh+igk/trees.nwk
  note: reducing --n-procs to 1 (was 28) so it isn't bigger than --n-sim-events
  generating 134 trees, n-leaves from geometric distribution with parameter 5.0
    mean over 134 trees:   depth 0.02817   leaves 5.57
    writing trees to test/paired/new-results-slow/test/simu/igh+igk/trees.nwk
      total time: 1.8
[44msimulate[0m [94migh+igk[0m:[94m igh[0m
[91mrun[0m /home/dralph/work/partis/bin/partis simulate --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/data/igh --n-sim-events 134 --n-trees 200 --n-leaf-distribution geometric --n-leaves 5 --min-observations-per-gene 5 --mean-cells-per-droplet 1.5 --constant-cells-per-droplet --fraction-of-reads-to-remove 0.15 --random-seed 177687104 --n-procs 10 --indel-frequency 0.2 --choose-trees-in-order --outfname test/paired/new-results-slow/test/simu/igh+igk/igh.yaml --input-simulation-treefname test/paired/new-results-slow/test/simu/igh+igk/trees.nwk
simulating
      --> proc 6
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/131583/trees-sub-6.nwk
    made 13 events with 55 seqs in 2.4s (2.1s of which was running bppseqgen)
      total time: 2.7

      --> proc 8
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/131583/trees-sub-8.nwk
    made 13 events with 57 seqs in 2.6s (2.3s of which was running bppseqgen)
      total time: 3.0

      --> proc 0
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/131583/trees-sub-0.nwk
    made 13 events with 94 seqs in 2.7s (2.4s of which was running bppseqgen)
      total time: 3.1

      --> proc 1
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/131583/trees-sub-1.nwk
    made 13 events with 71 seqs in 2.7s (2.3s of which was running bppseqgen)
      total time: 3.0

      --> proc 4
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/131583/trees-sub-4.nwk
    made 13 events with 59 seqs in 2.7s (2.4s of which was running bppseqgen)
      total time: 3.1

      --> proc 5
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/131583/trees-sub-5.nwk
    made 13 events with 47 seqs in 2.7s (2.5s of which was running bppseqgen)
      total time: 3.0

      --> proc 3
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/131583/trees-sub-3.nwk
    made 13 events with 84 seqs in 2.8s (2.4s of which was running bppseqgen)
      total time: 3.2

      --> proc 7
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/131583/trees-sub-7.nwk
    made 13 events with 65 seqs in 3.0s (2.7s of which was running bppseqgen)
      total time: 3.3

      --> proc 2
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/131583/trees-sub-2.nwk
    made 13 events with 104 seqs in 3.5s (3.2s of which was running bppseqgen)
      total time: 4.0

      --> proc 9
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 17 to match trees read from /tmp/dralph/hmms/131583/trees-sub-9.nwk
    made 17 events with 111 seqs in 3.6s (3.1s of which was running bppseqgen)
      total time: 4.0

   read 134 events with 747 seqs from 10 .yaml files
      total time: 4.9
[44msimulate[0m [94migh+igk[0m:[94m igk[0m
[91mrun[0m /home/dralph/work/partis/bin/partis simulate --locus igk --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/data/igk --n-sim-events 134 --n-trees 200 --n-leaf-distribution geometric --n-leaves 5 --min-observations-per-gene 5 --mean-cells-per-droplet 1.5 --constant-cells-per-droplet --fraction-of-reads-to-remove 0.15 --random-seed 298017927 --n-procs 10 --indel-frequency 0.2 --choose-trees-in-order --outfname test/paired/new-results-slow/test/simu/igh+igk/igk.yaml --input-simulation-treefname test/paired/new-results-slow/test/simu/igh+igk/trees.nwk
simulating
      --> proc 5
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/345814/trees-sub-5.nwk
    made 13 events with 47 seqs in 1.9s (1.8s of which was running bppseqgen)
      total time: 2.3

      --> proc 4
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/345814/trees-sub-4.nwk
    made 13 events with 59 seqs in 2.1s (1.8s of which was running bppseqgen)
      total time: 2.5

      --> proc 6
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/345814/trees-sub-6.nwk
    made 13 events with 55 seqs in 2.2s (2.0s of which was running bppseqgen)
      total time: 2.5

      --> proc 8
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/345814/trees-sub-8.nwk
    made 13 events with 57 seqs in 2.2s (1.9s of which was running bppseqgen)
      total time: 2.5

      --> proc 1
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/345814/trees-sub-1.nwk
    made 13 events with 71 seqs in 2.3s (2.0s of which was running bppseqgen)
      total time: 2.7

      --> proc 3
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/345814/trees-sub-3.nwk
    made 13 events with 84 seqs in 2.3s (2.1s of which was running bppseqgen)
      total time: 2.7

      --> proc 0
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/345814/trees-sub-0.nwk
    made 13 events with 94 seqs in 2.4s (2.1s of which was running bppseqgen)
      total time: 2.9

      --> proc 7
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/345814/trees-sub-7.nwk
    made 13 events with 65 seqs in 2.4s (2.1s of which was running bppseqgen)
      total time: 2.7

      --> proc 2
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/345814/trees-sub-2.nwk
    made 13 events with 104 seqs in 2.6s (2.4s of which was running bppseqgen)
      total time: 3.1

      --> proc 9
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 17 to match trees read from /tmp/dralph/hmms/345814/trees-sub-9.nwk
    made 17 events with 111 seqs in 3.2s (2.9s of which was running bppseqgen)
      total time: 3.5

   read 134 events with 747 seqs from 10 .yaml files
      total time: 4.5
[94migh+igl[0m: simulating 66 events
[44mgenerate-trees[0m [94migh+igl[0m:[94m igh[0m
[91mrun[0m /home/dralph/work/partis/bin/partis simulate --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/data/igh --n-trees 66 --n-leaf-distribution geometric --n-leaves 5 --min-observations-per-gene 5 --mean-cells-per-droplet 1.5 --constant-cells-per-droplet --fraction-of-reads-to-remove 0.15 --random-seed 172687121 --indel-frequency 0.2 --generate-trees --outfname test/paired/new-results-slow/test/simu/igh+igl/trees.nwk
  note: reducing --n-procs to 1 (was 28) so it isn't bigger than --n-sim-events
  generating 66 trees, n-leaves from geometric distribution with parameter 5.0
    mean over 66 trees:   depth 0.02461   leaves 6.45
    writing trees to test/paired/new-results-slow/test/simu/igh+igl/trees.nwk
      total time: 1.7
[44msimulate[0m [94migh+igl[0m:[94m igh[0m
[91mrun[0m /home/dralph/work/partis/bin/partis simulate --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/data/igh --n-sim-events 66 --n-trees 200 --n-leaf-distribution geometric --n-leaves 5 --min-observations-per-gene 5 --mean-cells-per-droplet 1.5 --constant-cells-per-droplet --fraction-of-reads-to-remove 0.15 --random-seed 172687121 --n-procs 10 --indel-frequency 0.2 --choose-trees-in-order --outfname test/paired/new-results-slow/test/simu/igh+igl/igh.yaml --input-simulation-treefname test/paired/new-results-slow/test/simu/igh+igl/trees.nwk
simulating
      --> proc 0
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/113911/trees-sub-0.nwk
    made 6 events with 15 seqs in 1.0s (0.8s of which was running bppseqgen)
      total time: 1.4

      --> proc 5
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/113911/trees-sub-5.nwk
    made 6 events with 27 seqs in 1.2s (1.0s of which was running bppseqgen)
      total time: 1.6

      --> proc 2
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/113911/trees-sub-2.nwk
    made 6 events with 43 seqs in 1.3s (1.1s of which was running bppseqgen)
      total time: 1.7

      --> proc 4
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/113911/trees-sub-4.nwk
    made 6 events with 22 seqs in 1.3s (1.1s of which was running bppseqgen)
      total time: 1.6

      --> proc 3
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/113911/trees-sub-3.nwk
    made 6 events with 41 seqs in 1.4s (1.3s of which was running bppseqgen)
      total time: 1.8

      --> proc 7
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/113911/trees-sub-7.nwk
    made 6 events with 31 seqs in 1.4s (1.1s of which was running bppseqgen)
      total time: 1.6

      --> proc 8
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/113911/trees-sub-8.nwk
    made 6 events with 69 seqs in 1.5s (1.2s of which was running bppseqgen)
      total time: 1.8

      --> proc 6
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/113911/trees-sub-6.nwk
    made 6 events with 30 seqs in 1.5s (1.3s of which was running bppseqgen)
      total time: 1.8

      --> proc 1
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/113911/trees-sub-1.nwk
    made 6 events with 49 seqs in 1.6s (1.5s of which was running bppseqgen)
      total time: 2.1

      --> proc 9
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 12 to match trees read from /tmp/dralph/hmms/113911/trees-sub-9.nwk
    made 12 events with 99 seqs in 2.7s (2.4s of which was running bppseqgen)
      total time: 3.1

   read 66 events with 426 seqs from 10 .yaml files
      total time: 3.9
[44msimulate[0m [94migh+igl[0m:[94m igl[0m
[91mrun[0m /home/dralph/work/partis/bin/partis simulate --locus igl --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/data/igl --n-sim-events 66 --n-trees 200 --n-leaf-distribution geometric --n-leaves 5 --min-observations-per-gene 5 --mean-cells-per-droplet 1.5 --constant-cells-per-droplet --fraction-of-reads-to-remove 0.15 --random-seed 1456246501 --n-procs 10 --indel-frequency 0.2 --choose-trees-in-order --outfname test/paired/new-results-slow/test/simu/igh+igl/igl.yaml --input-simulation-treefname test/paired/new-results-slow/test/simu/igh+igl/trees.nwk
simulating
      --> proc 4
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/562420/trees-sub-4.nwk
    made 6 events with 22 seqs in 0.9s (0.8s of which was running bppseqgen)
      total time: 1.3

      --> proc 0
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/562420/trees-sub-0.nwk
    made 6 events with 15 seqs in 1.0s (0.8s of which was running bppseqgen)
      total time: 1.4

      --> proc 2
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/562420/trees-sub-2.nwk
    made 6 events with 43 seqs in 1.0s (0.9s of which was running bppseqgen)
      total time: 1.3

      --> proc 6
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/562420/trees-sub-6.nwk
    made 6 events with 30 seqs in 1.0s (0.9s of which was running bppseqgen)
      total time: 1.4

      --> proc 5
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/562420/trees-sub-5.nwk
    made 6 events with 27 seqs in 1.2s (1.0s of which was running bppseqgen)
      total time: 1.6

      --> proc 7
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/562420/trees-sub-7.nwk
    made 6 events with 31 seqs in 1.2s (1.0s of which was running bppseqgen)
      total time: 1.5

      --> proc 3
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/562420/trees-sub-3.nwk
    made 6 events with 41 seqs in 1.3s (1.1s of which was running bppseqgen)
      total time: 1.7

      --> proc 1
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/562420/trees-sub-1.nwk
    made 6 events with 49 seqs in 1.3s (1.2s of which was running bppseqgen)
      total time: 1.7

      --> proc 8
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/562420/trees-sub-8.nwk
    made 6 events with 69 seqs in 1.4s (1.3s of which was running bppseqgen)
      total time: 1.7

      --> proc 9
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 12 to match trees read from /tmp/dralph/hmms/562420/trees-sub-9.nwk
    made 12 events with 99 seqs in 2.1s (1.9s of which was running bppseqgen)
      total time: 2.3

   read 66 events with 426 seqs from 10 .yaml files
      total time: 3.3
[94migh+igk[0m: synchronizing heavy and light chain simulation trees and rewriting output files in test/paired/new-results-slow/test/simu/igh+igk/
[94migh+igl[0m: synchronizing heavy and light chain simulation trees and rewriting output files in test/paired/new-results-slow/test/simu/igh+igl/
  apportioned 2346 seqs among 782 droplets (mean/2 1.5): 2 4 2 4 4 2 4 4 2 4 2 4 4 4 4 2 4 4 4 4 2 4 2 4 2 4 4 4 2 2 2 2 4 4 2 2 4 4 2 4 4 2 4 2 2 2 4 4 4 4 2 4 4 4 2 2 4 4 4 4 2 2 4 4 2 4 2 4 4 4 4 2 4 4 2 4 4 4 4 4 4 4 2 2 4 4 2 2 2 2 4 4 2 2 4 2 2 2 4 2 4 4 4 4 2 4 4 2 2 4 2 2 2 2 4 4 4 2 2 4 2 4 2 4 2 4 2 4 4 4 4 4 4 4 2 2 2 2 2 2 2 4 2 2 4 2 4 2 4 4 4 4 4 4 2 2 2 4 2 4 4 2 2 4 4 4 4 4 4 4 2 4 4 2 4 4 2 2 2 4 2 4 2 2 2 2 4 4 4 2 2 2 4 2 4 2 2 2 2 4 2 4 4 2 2 4 4 2 4 2 2 2 2 4 2 2 2 4 4 2 2 2 2 2 2 2 2 4 4 4 4 2 2 2 2 4 2 4 4 4 2 4 4 4 4 2 4 4 4 4 4 2 4 2 4 2 2 2 4 4 2 2 4 4 2 2 2 2 4 4 2 4 4 4 4 2 4 4 2 2 2 2 2 2 4 4 2 2 4 2 4 4 4 4 4 4 4 2 2 4 2 2 4 4 4 4 4 4 4 2 2 2 2 4 4 4 4 2 2 2 2 2 4 2 2 4 2 2 2 2 2 2 4 2 4 2 4 4 2 2 4 2 4 2 4 2 2 4 2 2 2 4 2 2 2 4 2 2 4 4 4 4 4 4 2 2 4 2 4 2 4 4 2 4 4 4 2 4 2 4 4 2 2 4 4 2 2 4 4 2 4 2 2 2 2 2 4 4 4 4 4 4 4 4 4 2 4 4 4 2 2 4 4 2 4 2 2 2 4 4 2 2 4 4 2 2 2 2 2 2 2 4 2 2 2 4 2 2 2 2 2 4 2 4 4 4 4 4 2 2 2 2 2 2 4 2 2 4 2 2 4 4 2 4 2 4 4 4 2 4 4 2 4 4 4 4 2 2 4 4 2 4 4 2 4 2 4 2 2 2 2 2 2 4 4 4 4 2 4 2 4 2 2 4 4 4 4 4 2 4 2 2 4 4 4 4 2 2 4 4 2 4 2 2 2 4 4 2 2 2 2 2 4 4 4 2 4 2 2 4 2 2 4 4 2 2 2 4 2 4 2 4 4 2 4 2 2 2 4 4 4 2 4 4 4 4 4 4 2 2 2 2 4 4 2 4 2 2 2 4 4 2 2 4 2 2 4 4 4 4 2 4 2 4 2 2 4 2 2 2 2 4 4 4 4 4 2 2 4 4 4 4 2 2 2 4 4 2 2 4 2 2 2 2 4 2 4 2 4 2 4 2 4 2 2 4 4 2 4 4 2 2 2 2 4 2 4 4 2 4 4 4 2 4 2 2 2 2 2 4 4 4 4 4 4 2 4 4 2 2 2 4 4 4 4 4 2 2 2 2 4 2 2 2 4 2 4 2 2 2 4 4 4 4 2 2 4 2 2 2 2 2 4 2 2 4 4 2 4 2 2 4 4 4 4 4 2 4 4 2 4 4 2 2 4 4 2 2 2 4 2 2 2 2 2 2 2 2 2 4 2 4 2 2 2 2 4 4 2 4 2 2 4 2 4 2 2 4 2 2 4 2 4 2 4 2 4 4 2 2 2 4 4 2 2 2 4 2 4 2 4 4
  removed 351 / 2346 = 0.15 seqs from outfos (leaving 104 / 1995 unpaired)
      total time: 24.4
[92mcache-parameters-simu[0m            /home/dralph/work/partis/bin/partis cache-parameters --dont-write-git-info --paired-loci --paired-indir test/paired/new-results-slow/test/simu --parameter-dir test/paired/new-results-slow/test/parameters/simu --is-simu --random-seed 1 --n-procs 10
  note: --paired-outdir is not set, so there will be no persistent record of the results (except the parameter directory).
[44mcache-parameters[0m [94migh[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis cache-parameters --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igh --is-simu --random-seed 1 --n-procs 10 --infname test/paired/new-results-slow/test/simu/igh.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 1000 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
caching parameters
  vsearch: 1000 / 1000 v annotations (0 failed) with 37 v genes in 0.1 sec
    keeping 23 / 198 v genes
smith-waterman  (new-allele fitting)
  vsearch: 1000 / 1000 v annotations (0 failed) with 23 v genes in 0.2 sec
  removing old sw cache test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml
    running 10 procs for 1000 seqs
    running 11 procs for 33 seqs
      info for 1000 / 1000 = 1.000   (removed: 0 failed)
      kept 325 (0.325) unproductive
    water time: 1.4  (ig-sw 0.1  processing 0.2)
smith-waterman  (writing parameters)
  vsearch: 1000 / 1000 v annotations (0 failed) with 23 v genes in 0.3 sec
    running 10 procs for 1000 seqs
    running 11 procs for 33 seqs
      info for 1000 / 1000 = 1.000   (removed: 0 failed)
      kept 325 (0.325) unproductive
        writing sw results to test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igh/sw (1.5 sec)
    water time: 3.7  (ig-sw 2.2  processing 0.3)
  writing hmms     removed 1  genes from glfo (leaving v 23  d 31  j 6)
(0.3 sec)
hmm
    skipping matches from 2 genes without enough counts: [95mh[0m[91md[0m[95m2[0m[95m-2[0m[93m02[0m [95mh[0m[91md[0m[95m5[0m[95m-12[0m[93m01[0m
    reading output
        read 1000 hmm output lines with 1000 sequences in 1000 events  (0 failures)
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igh/hmm (1.5 sec)
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igh/true (1.4 sec)
         infra time: 4.4
      hmm step time: 6.2
  writing hmms     removed 4  genes from glfo (leaving v 23  d 27  j 6)
(0.3 sec)
      total time: 14.0
[44mcache-parameters[0m [94migk[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis cache-parameters --locus igk --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igk --is-simu --random-seed 1 --n-procs 10 --infname test/paired/new-results-slow/test/simu/igk.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 640 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
caching parameters
  vsearch: 640 / 640 v annotations (0 failed) with 18 v genes in 0.1 sec
    keeping 16 / 64 v genes
smith-waterman  (new-allele fitting)
  vsearch: 640 / 640 v annotations (0 failed) with 16 v genes in 0.2 sec
  removing old sw cache test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml
    running 10 procs for 640 seqs
    running 11 procs for 11 seqs
      info for 640 / 640 = 1.000   (removed: 0 failed)
      kept 111 (0.173) unproductive
    water time: 0.7  (ig-sw 0.0  processing 0.1)
smith-waterman  (writing parameters)
  vsearch: 640 / 640 v annotations (0 failed) with 16 v genes in 0.2 sec
    running 10 procs for 640 seqs
    running 11 procs for 11 seqs
      info for 640 / 640 = 1.000   (removed: 0 failed)
      kept 111 (0.173) unproductive
        writing sw results to test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igk/sw (1.3 sec)
    water time: 2.5  (ig-sw 1.7  processing 0.2)
  writing hmms     removed 0  genes from glfo (leaving v 16  d 1  j 7)
(0.1 sec)
hmm
    reading output
        read 640 hmm output lines with 638 sequences in 638 events  (2 failures)
          [91mwarning[0m no valid paths: 5802210866897873152-igk 3594209871322143324-igk
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igk/hmm (1.1 sec)
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igk/true (1.1 sec)
         infra time: 3.4
      hmm step time: 4.4
  writing hmms     removed 0  genes from glfo (leaving v 16  d 1  j 7)
(0.1 sec)
      total time: 8.9
[44mcache-parameters[0m [94migl[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis cache-parameters --locus igl --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igl --is-simu --random-seed 1 --n-procs 10 --infname test/paired/new-results-slow/test/simu/igl.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 355 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
caching parameters
  vsearch: 355 / 355 v annotations (0 failed) with 15 v genes in 0.1 sec
    keeping 10 / 80 v genes
smith-waterman  (new-allele fitting)
  vsearch: 355 / 355 v annotations (0 failed) with 10 v genes in 0.1 sec
  removing old sw cache test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml
    running 10 procs for 355 seqs
    running 11 procs for 7 seqs
      info for 355 / 355 = 1.000   (removed: 0 failed)
      kept 80 (0.225) unproductive
    water time: 0.4  (ig-sw 0.0  processing 0.1)
smith-waterman  (writing parameters)
  vsearch: 355 / 355 v annotations (0 failed) with 10 v genes in 0.1 sec
    running 10 procs for 355 seqs
    running 11 procs for 7 seqs
      info for 355 / 355 = 1.000   (removed: 0 failed)
      kept 80 (0.225) unproductive
        writing sw results to test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igl/sw (0.9 sec)
    water time: 1.6  (ig-sw 1.1  processing 0.1)
  writing hmms     removed 6  genes from glfo (leaving v 10  d 1  j 3)
(0.2 sec)
hmm
    reading output
        read 355 hmm output lines with 353 sequences in 353 events  (2 failures)
          [91mwarning[0m no valid paths: 6367726388695138423-igl 0680380776689897989-igl
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igl/hmm (0.6 sec)
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igl/true (0.6 sec)
         infra time: 2.0
      hmm step time: 2.6
  writing hmms     removed 0  genes from glfo (leaving v 10  d 1  j 3)
(0.1 sec)
      total time: 5.6
      total time: 29.6
[92mpartition-new-simu[0m               /home/dralph/work/partis/bin/partis partition --dont-write-git-info --paired-loci --paired-indir test/paired/new-results-slow/test/simu --parameter-dir test/paired/new-results-slow/test/parameters/simu --plot-annotation-performance --max-ccf-fail-frac 0.10 --is-simu --plotdir test/paired/new-results-slow/partition-new-simu-annotation-performance --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --paired-outdir test/paired/new-results-slow/partition-new-simu
  [93mwarning[0m ignoring --plot-annotation-performance for paired clustering since it's going to be a bit fiddly to implement
[44mpartition[0m [94migh[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis partition --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igh --plot-annotation-performance --max-ccf-fail-frac 0.10 --is-simu --plotdir test/paired/new-results-slow/partition-new-simu-annotation-performance/single-chain/plots/igh --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/test/simu/igh.yaml --outfname test/paired/new-results-slow/partition-new-simu/single-chain/partition-igh.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 1000 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
partitioning     (with test/paired/new-results-slow/test/parameters/simu/igh/hmm)
smith-waterman
  vsearch: 1000 / 1000 v annotations (0 failed) with 23 v genes in 0.3 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml
      info for 1000 / 1000 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 325 (0.325) unproductive
  plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 46 queries with different true and inferred net shm indel lengths: 2488807745589814943-igh 3980532803358933603-igh 4073438025032049835-igh 1054090379775176327-igh 2917738267650240402-igh 7043909144958920011-igh 3818326766997109487-igh 0356379406817606555-igh 2897674672026153214-igh 1622521782624448165-igh 4978225974165211702-igh 3315896596429344122-igh 0010535159084805846-igh 5699535924198739028-igh 6508079870329503888-igh 5826850563641090501-igh 6986832758238280520-igh 1400772063092006838-igh 3950938221096510937-igh 3916891821360773100-igh 5000444214780551666-igh 0117937365685407321-igh 0680207073006621040-igh 7032751117135714792-igh 7720944207401730279-igh 1252132326248130775-igh 8957710528055392055-igh 4535443007653894495-igh 4995415345192250287-igh 2803379781311571395-igh 7420360837700887520-igh 3220642911298757188-igh 2094218776922064561-igh 0060607139543165647-igh 3372567815996442755-igh 6961718552349844304-igh 0083509690903049153-igh 5776690824699027316-igh 8978107622438907369-igh 2201753879444184247-igh 7717196539324954295-igh 3094999436340659134-igh 8441159689110816677-igh 2768152530079277521-igh 8786371871708854728-igh 2334154363188070671-igh
(0.0 sec)
        water time: 1.1
hmm
  caching all 1000 naive sequences (1.9s)
   collapsed 1000 queries into 448 clusters with identical naive seqs (0.0 sec)
  448 clusters with 10 procs (3.2s)
  365 clusters with 7 procs (2.4s)
  319 clusters with 5 procs (3.1s)
  274 clusters with 3 procs (3.2s)
  243 clusters with 2 procs (4.5s)
  217 clusters with 2 procs (3.5s)
  206 clusters with 2 procs (2.0s)
  200 clusters with 1 proc (3.6s)
  [93mnote[0m not merging entire cpath history
      partition loop time: 25.4
getting annotations for final partition
  subcluster annotating 196 clusters with steps:  (1.8s) (1.0s) (0.4s) (0.3s)   plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 46 queries with different true and inferred net shm indel lengths: 5699535924198739028-igh 6961718552349844304-igh 1252132326248130775-igh 0083509690903049153-igh 7720944207401730279-igh 3220642911298757188-igh 1400772063092006838-igh 0010535159084805846-igh 0060607139543165647-igh 0117937365685407321-igh 0356379406817606555-igh 0680207073006621040-igh 1054090379775176327-igh 1622521782624448165-igh 2094218776922064561-igh 2201753879444184247-igh 2334154363188070671-igh 2488807745589814943-igh 2768152530079277521-igh 2803379781311571395-igh 2897674672026153214-igh 2917738267650240402-igh 3094999436340659134-igh 3315896596429344122-igh 3372567815996442755-igh 3818326766997109487-igh 3916891821360773100-igh 3950938221096510937-igh 3980532803358933603-igh 4073438025032049835-igh 4535443007653894495-igh 4978225974165211702-igh 4995415345192250287-igh 5000444214780551666-igh 5776690824699027316-igh 5826850563641090501-igh 6508079870329503888-igh 6986832758238280520-igh 7032751117135714792-igh 7043909144958920011-igh 7420360837700887520-igh 7717196539324954295-igh 8441159689110816677-igh 8786371871708854728-igh 8957710528055392055-igh 8978107622438907369-igh
(0.0 sec)

    subcluster annotation time 4.7
      total time: 33.9
[44mpartition[0m [94migk[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis partition --locus igk --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igk --plot-annotation-performance --max-ccf-fail-frac 0.10 --is-simu --plotdir test/paired/new-results-slow/partition-new-simu-annotation-performance/single-chain/plots/igk --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/test/simu/igk.yaml --outfname test/paired/new-results-slow/partition-new-simu/single-chain/partition-igk.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 640 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
partitioning     (with test/paired/new-results-slow/test/parameters/simu/igk/hmm)
smith-waterman
  vsearch: 640 / 640 v annotations (0 failed) with 16 v genes in 0.2 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml
      info for 640 / 640 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 111 (0.173) unproductive
  plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 23 queries with different true and inferred net shm indel lengths: 2488807745589814943-igk 5802210866897873152-igk 9150333179807655332-igk 8283158626927785203-igk 2152272422987659847-igk 3594209871322143324-igk 4930447683585229275-igk 5241701537690132766-igk 0486597982636693228-igk 8285089453236201552-igk 7141730765438189074-igk 8469974146970202101-igk 4847800476434817784-igk 5933458625351603950-igk 1943440281804439201-igk 1561865623356487723-igk 9035977341874407873-igk 7749248139831988541-igk 2004075356755268685-igk 0367083829757630537-igk 7768221577657178431-igk 1528156310125601369-igk 7315577117789168684-igk
(0.0 sec)
        water time: 0.7
hmm
  caching all 640 naive sequences (0.9s)
    [93mwarning:[0m missing 2 queries from hmm cache file (using sw naive sequence instead): 5802210866897873152-igk 3594209871322143324-igk
   collapsed 640 queries into 70 clusters with identical naive seqs (0.0 sec)
  70 clusters with 10 procs (0.5s)
  63 clusters with 7 procs (0.4s)
  58 clusters with 5 procs (0.2s)
  56 clusters with 3 procs (0.3s)
  52 clusters with 2 procs (0.3s)
  50 clusters with 1 proc (1.0s)
  [93mnote[0m not merging entire cpath history
  [93mwarning[0m all 15 partitions in cluster path have log prob -inf, so setting last (best) to zero
      partition loop time: 2.7
getting annotations for final partition
  subcluster annotating 49 clusters with steps:            [91mwarning[0m no valid paths: 5802210866897873152-igk 3594209871322143324-igk
(1.3s)     missing 2 annotations
      removing failed cluster for 3594209871322143324-igk:
      removing failed cluster for 5802210866897873152-igk:
(0.6s) (0.3s) (0.2s)   plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 21 queries with different true and inferred net shm indel lengths: 0486597982636693228-igk 7315577117789168684-igk 2488807745589814943-igk 9150333179807655332-igk 0367083829757630537-igk 8469974146970202101-igk 1943440281804439201-igk 1528156310125601369-igk 1561865623356487723-igk 2004075356755268685-igk 2152272422987659847-igk 4847800476434817784-igk 4930447683585229275-igk 5241701537690132766-igk 5933458625351603950-igk 7141730765438189074-igk 7749248139831988541-igk 7768221577657178431-igk 8283158626927785203-igk 8285089453236201552-igk 9035977341874407873-igk
(0.0 sec)

    subcluster annotation time 3.1
      total time: 8.1
[44mpartition[0m [94migl[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis partition --locus igl --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igl --plot-annotation-performance --max-ccf-fail-frac 0.10 --is-simu --plotdir test/paired/new-results-slow/partition-new-simu-annotation-performance/single-chain/plots/igl --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/test/simu/igl.yaml --outfname test/paired/new-results-slow/partition-new-simu/single-chain/partition-igl.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 355 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
partitioning     (with test/paired/new-results-slow/test/parameters/simu/igl/hmm)
smith-waterman
  vsearch: 355 / 355 v annotations (0 failed) with 10 v genes in 0.2 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml
      info for 355 / 355 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 80 (0.225) unproductive
  plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 15 queries with different true and inferred net shm indel lengths: 7854073847316695865-igl 6148151334304704275-igl 8106176715388765037-igl 3060677754724053213-igl 0548059609192073405-igl 8622805701940314646-igl 1415346133259205764-igl 0680380776689897989-igl 5938449323816803944-igl 6505979983387928214-igl 6634353908178547194-igl 6367726388695138423-igl 5017518669223990523-igl 4889218450041764731-igl 4017785451570665519-igl
(0.0 sec)
        water time: 0.6
hmm
  caching all 355 naive sequences (0.6s)
    [93mwarning:[0m missing 2 queries from hmm cache file (using sw naive sequence instead): 6367726388695138423-igl 0680380776689897989-igl
   collapsed 355 queries into 40 clusters with identical naive seqs (0.0 sec)
  40 clusters with 10 procs (0.4s)
  36 clusters with 7 procs (0.3s)
  35 clusters with 5 procs (0.3s)
  31 clusters with 3 procs (0.2s)
  25 clusters with 2 procs (0.2s)
  23 clusters with 1 proc (0.7s)
  [93mnote[0m not merging entire cpath history
  [93mwarning[0m all 12 partitions in cluster path have log prob -inf, so setting last (best) to zero
      partition loop time: 2.1
getting annotations for final partition
  subcluster annotating 20 clusters with steps:            [91mwarning[0m no valid paths: 6367726388695138423-igl 0680380776689897989-igl
(0.8s)     missing 2 annotations
      removing failed cluster for 0680380776689897989-igl:
      removing failed cluster for 6367726388695138423-igl:
(0.4s) (0.2s) (0.2s) (0.1s)   plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 13 queries with different true and inferred net shm indel lengths: 4889218450041764731-igl 8106176715388765037-igl 5938449323816803944-igl 6634353908178547194-igl 6148151334304704275-igl 4017785451570665519-igl 0548059609192073405-igl 1415346133259205764-igl 3060677754724053213-igl 5017518669223990523-igl 6505979983387928214-igl 7854073847316695865-igl 8622805701940314646-igl
(0.0 sec)

    subcluster annotation time 2.0
      total time: 5.8
[44mcombining[0m chains
      removed 2 failed queries when reading partition: 5802210866897873152-igk 3594209871322143324-igk
      removed 2 failed queries when reading partition: 6367726388695138423-igl 0680380776689897989-igl
   cleaning pair info for 1991 seqs
   5/1991 (0.00) missing uids when cleaning pair info
     synchronized/fixed 0 pairs where one had no pair info after cleaning: [94mh[0m 0  [95mk[0m 0  [92ml[0m 0
    truncating x bins 3 --> 12 and ybins 5 --> 12
    truncating x bins 6 --> 15 and ybins 18 --> 15
[94migh+igk[0m: synchronizing heavy and light chain cluster paths
    removing badly paired seqs:      [93mwarning[0m adding missing per-seq key: mut_positions
  note: added 1 new input meta key to allowed keys (add 's'/plural to access it in the final annotations): mut_position (mut_positions)
237 total unpaired,  [94mh[0m 152  [95mk[0m 85
    merging igh+igk partitions
  [93mwarning[0m paired uids in line, but <translate_pids> wasn't set, so they won't be translated
   N clusters without bad/unpaired seqs:
        [94mh[0m  127 --> 183  [91m+56[0m
        [95mk[0m   46 --> 183  [91m+137[0m
    re-added unpaired seqs ([94mh[0m 152, [95mk[0m 85) to give total seqs in joint partitions: [94mh[0m 705  [95mk[0m 638
    [93mwarning[0m removed 9/641 uids (leaving 632) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
    [93mwarning[0m added 56 / 705 missing ids as singletons to true partition, to match ids in inferred partition (restricting to unpaired_uids, i.e. probably these were unpaired seqs that were re-added to the inferred partition, but in the true partition were paired with the other chain)
    [93mwarning[0m added 17 / 705 missing ids as singletons to true partition, to match ids in inferred partition (giving up and adding whatever is needed, which is sometimes/maybe just from mispaired seqs)
  [94mh[0m ccfs:     purity  completeness
      single   0.821  0.899
       joint   0.920  0.847
    [93mwarning[0m removed 2/640 uids (leaving 638) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
    [93mwarning[0m removed 2/640 uids (leaving 638) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
  [95mk[0m ccfs:     purity  completeness
      single   0.382  0.964
       joint   0.883  0.751
  merge time 0.0
  need to get annotations for 181/218 joint igh clusters
[44mannotate[0m [94migh+igk[0m:[94m igh[0m
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis annotate --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igh --max-ccf-fail-frac 0.10 --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/partition-new-simu/igh+igk/input-seqs-igh.fa --outfname test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igh.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml --input-metafnames test/paired/new-results-slow/partition-new-simu/igh+igk/meta-igh.yaml --input-partition-fname test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igh-only-partition.yaml
  --input-metafnames: added meta info for 705 sequences from test/paired/new-results-slow/partition-new-simu/igh+igk/meta-igh.yaml: paired-uids loci
  --input-partition-fname: read best partition with 705 sequences in 218 clusters from test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igh-only-partition.yaml
annotating    (with test/paired/new-results-slow/test/parameters/simu/igh/hmm)
smith-waterman
  vsearch: 705 / 705 v annotations (0 failed) with 23 v genes in 0.2 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml
      info for 705 / 705 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 222 (0.315) unproductive
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6121286091282752029-igh': [[u'4093280625760375699-igl', u'4093280625760375699-igh', u'6121286091282752029-igk']] --> [[u'6121286091282752029-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6722120375077228054-igh': [[u'4073438025032049835-igh', u'6722120375077228054-igk']] --> [[u'6722120375077228054-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6855792781705345232-igh': [[u'3450656579317413388-igk', u'6855792781705345232-igk']] --> [[u'6855792781705345232-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '4240844673569892480-igh': [[u'4240844673569892480-igk', u'8104974444708468694-igk', u'8104974444708468694-igh']] --> [[u'4240844673569892480-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3959016276963839779-igh': [[u'3959016276963839779-igk', u'4374180125503431254-igl']] --> [[u'3959016276963839779-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '2170976772948456698-igh': [[u'2170976772948456698-igk', u'7130919680731245093-igh', u'7130919680731245093-igk']] --> [[u'2170976772948456698-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '0021862927477165586-igh': [[u'6749430991519732789-igh', u'0021862927477165586-igk']] --> [[]]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '4597023380560131721-igh': [[u'4597023380560131721-igk', u'7986907253018242215-igh', u'7986907253018242215-igk']] --> [[u'4597023380560131721-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '0025875912421542650-igh': [[u'0025875912421542650-igk', u'2825351769968960704-igk', u'2825351769968960704-igh']] --> [[u'0025875912421542650-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '4322109549931866203-igh': [[u'4856397924137927341-igl', u'4322109549931866203-igk']] --> [[u'4322109549931866203-igk']]
[93mwarning[0m replaced input metafo for 1 total key in 460 seqs (460 clusters): paired-uids (see above, only printed the first 10 clusters)
  add_input_metafo(): transferring input metafo from <input_info> to <line> (counts in table are uids, not lines)
                            no-info  with-info  one-src ident. not-overwr. replaced
                    loci        0      705        0      705        0        0
             paired-uids        0      705        0      245        0      460
        water time: 0.3
hmm
  subcluster annotating 218 clusters with steps:  (1.5s) (0.7s) (0.3s) (0.2s) 
    subcluster annotation time 3.0
      total time: 3.5
  need to get annotations for 171/184 joint igk clusters
[44mannotate[0m [94migh+igk[0m:[94m igk[0m
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis annotate --locus igk --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igk --max-ccf-fail-frac 0.10 --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/partition-new-simu/igh+igk/input-seqs-igk.fa --outfname test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igk.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml --input-metafnames test/paired/new-results-slow/partition-new-simu/igh+igk/meta-igk.yaml --input-partition-fname test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igk-only-partition.yaml
  --input-metafnames: added meta info for 638 sequences from test/paired/new-results-slow/partition-new-simu/igh+igk/meta-igk.yaml: paired-uids loci
  --input-partition-fname: read best partition with 638 sequences in 184 clusters from test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igk-only-partition.yaml
annotating    (with test/paired/new-results-slow/test/parameters/simu/igk/hmm)
smith-waterman
  vsearch: 638 / 638 v annotations (0 failed) with 16 v genes in 0.2 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml
      info for 638 / 638 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 109 (0.171) unproductive
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6121286091282752029-igk': [[u'4093280625760375699-igl', u'4093280625760375699-igh', u'6121286091282752029-igh']] --> [[u'6121286091282752029-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6722120375077228054-igk': [[u'4073438025032049835-igh', u'6722120375077228054-igh']] --> [[u'6722120375077228054-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6855792781705345232-igk': [[u'3450656579317413388-igk', u'6855792781705345232-igh']] --> [[u'6855792781705345232-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '4240844673569892480-igk': [[u'4240844673569892480-igh', u'8104974444708468694-igk', u'8104974444708468694-igh']] --> [[u'4240844673569892480-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3959016276963839779-igk': [[u'3959016276963839779-igh', u'4374180125503431254-igl']] --> [[u'3959016276963839779-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '2170976772948456698-igk': [[u'2170976772948456698-igh', u'7130919680731245093-igh', u'7130919680731245093-igk']] --> [[u'2170976772948456698-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '2203633417955286678-igk': [[u'2538275690950213139-igk', u'2538275690950213139-igh']] --> [[]]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '4597023380560131721-igk': [[u'4597023380560131721-igh', u'7986907253018242215-igh', u'7986907253018242215-igk']] --> [[u'4597023380560131721-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '0025875912421542650-igk': [[u'0025875912421542650-igh', u'2825351769968960704-igk', u'2825351769968960704-igh']] --> [[u'0025875912421542650-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '4322109549931866203-igk': [[u'4856397924137927341-igl', u'4322109549931866203-igh']] --> [[u'4322109549931866203-igh']]
[93mwarning[0m replaced input metafo for 1 total key in 397 seqs (397 clusters): paired-uids (see above, only printed the first 10 clusters)
  add_input_metafo(): transferring input metafo from <input_info> to <line> (counts in table are uids, not lines)
                            no-info  with-info  one-src ident. not-overwr. replaced
                    loci        0      638        0      638        0        0
             paired-uids        0      638        0      241        0      397
        water time: 0.2
hmm
  [93mwarning[0m split apart 3 clusters that contained multiple cdr3 lengths (total clusters: 184 --> 188)
      cluster splits:  12 --> 9 1 2,   3 --> 2 1,   3 --> 1 2
  subcluster annotating 188 clusters with steps:  (1.3s) (0.5s) (0.2s) (0.1s) 
    subcluster annotation time 2.2
      total time: 2.7
[94migh+igl[0m: synchronizing heavy and light chain cluster paths
    removing badly paired seqs:  210 total unpaired,  [94mh[0m 152  [92ml[0m 58
    merging igh+igl partitions
  [93mwarning[0m paired uids in line, but <translate_pids> wasn't set, so they won't be translated
   N clusters without bad/unpaired seqs:
        [94mh[0m   74 --> 86   [91m+12[0m
        [92ml[0m   12 --> 86   [91m+74[0m
    re-added unpaired seqs ([94mh[0m 152, [92ml[0m 58) to give total seqs in joint partitions: [94mh[0m 447  [92ml[0m 353
    [93mwarning[0m removed 17/359 uids (leaving 342) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
    [93mwarning[0m added 96 / 447 missing ids as singletons to true partition, to match ids in inferred partition (restricting to unpaired_uids, i.e. probably these were unpaired seqs that were re-added to the inferred partition, but in the true partition were paired with the other chain)
    [93mwarning[0m added 9 / 447 missing ids as singletons to true partition, to match ids in inferred partition (giving up and adding whatever is needed, which is sometimes/maybe just from mispaired seqs)
  [94mh[0m ccfs:     purity  completeness
      single   0.821  0.899
       joint   0.868  0.869
    [93mwarning[0m removed 2/355 uids (leaving 353) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
    [93mwarning[0m removed 2/355 uids (leaving 353) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
  [92ml[0m ccfs:     purity  completeness
      single   0.281  0.971
       joint   0.897  0.724
  merge time 0.0
  need to get annotations for 119/149 joint igh clusters
[44mannotate[0m [94migh+igl[0m:[94m igh[0m
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis annotate --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igh --max-ccf-fail-frac 0.10 --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/partition-new-simu/igh+igl/input-seqs-igh.fa --outfname test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igh.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml --input-metafnames test/paired/new-results-slow/partition-new-simu/igh+igl/meta-igh.yaml --input-partition-fname test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igh-only-partition.yaml
  --input-metafnames: added meta info for 447 sequences from test/paired/new-results-slow/partition-new-simu/igh+igl/meta-igh.yaml: paired-uids loci
  --input-partition-fname: read best partition with 447 sequences in 149 clusters from test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igh-only-partition.yaml
annotating    (with test/paired/new-results-slow/test/parameters/simu/igh/hmm)
smith-waterman
  vsearch: 447 / 447 v annotations (0 failed) with 22 v genes in 0.1 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml
      info for 447 / 447 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 152 (0.340) unproductive
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3702309925660917186-igh': [[u'6786485662233600272-igl', u'6786485662233600272-igh']] --> [[u'6786485662233600272-igl']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '1553646224832994151-igh': [[u'1553646224832994151-igk', u'7393160061563060845-igh']] --> [[]]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '9035977341874407873-igh': [[u'9035977341874407873-igk', u'4478371567748868673-igl']] --> [[u'4478371567748868673-igl']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '0139327791509776491-igh': [[u'4708430121420434387-igk', u'0139327791509776491-igl']] --> [[u'0139327791509776491-igl']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3610536034903581483-igh': [[u'3610536034903581483-igl', u'6689633771134011375-igk', u'6689633771134011375-igh']] --> [[u'3610536034903581483-igl']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6741903899259886010-igh': [[u'6741903899259886010-igl', u'8957710528055392055-igh', u'8957710528055392055-igk']] --> [[u'6741903899259886010-igl']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '7620991763028213523-igh': [[u'8001459762178200715-igl', u'8001459762178200715-igh', u'7620991763028213523-igl']] --> [[u'7620991763028213523-igl']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6033021242520526803-igh': [[u'6033021242520526803-igl', u'3654001128950720339-igh', u'3654001128950720339-igl']] --> [[u'3654001128950720339-igl']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '0073626956148989884-igh': [[u'7182063963113590998-igh', u'7182063963113590998-igl', u'0073626956148989884-igl']] --> [[u'0073626956148989884-igl']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3476072868109360172-igh': [[u'7820195697040431010-igh', u'7820195697040431010-igl', u'3476072868109360172-igl']] --> [[u'3476072868109360172-igl']]
[93mwarning[0m replaced input metafo for 1 total key in 304 seqs (304 clusters): paired-uids (see above, only printed the first 10 clusters)
  add_input_metafo(): transferring input metafo from <input_info> to <line> (counts in table are uids, not lines)
                            no-info  with-info  one-src ident. not-overwr. replaced
                    loci        0      447        0      447        0        0
             paired-uids        0      447        0      143        0      304
        water time: 0.2
hmm
  subcluster annotating 149 clusters with steps:  (1.2s) (0.5s) (0.3s) 
    subcluster annotation time 2.1
      total time: 2.6
  need to get annotations for 91/92 joint igl clusters
[44mannotate[0m [94migh+igl[0m:[94m igl[0m
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis annotate --locus igl --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igl --max-ccf-fail-frac 0.10 --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/partition-new-simu/igh+igl/input-seqs-igl.fa --outfname test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igl.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml --input-metafnames test/paired/new-results-slow/partition-new-simu/igh+igl/meta-igl.yaml --input-partition-fname test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igl-only-partition.yaml
  --input-metafnames: added meta info for 353 sequences from test/paired/new-results-slow/partition-new-simu/igh+igl/meta-igl.yaml: paired-uids loci
  --input-partition-fname: read best partition with 353 sequences in 92 clusters from test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igl-only-partition.yaml
annotating    (with test/paired/new-results-slow/test/parameters/simu/igl/hmm)
smith-waterman
  vsearch: 353 / 353 v annotations (0 failed) with 10 v genes in 0.1 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml
      info for 353 / 353 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 78 (0.221) unproductive
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6786485662233600272-igl': [[u'3702309925660917186-igh', u'6786485662233600272-igh']] --> [[u'3702309925660917186-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '4478371567748868673-igl': [[u'9035977341874407873-igk', u'9035977341874407873-igh']] --> [[u'9035977341874407873-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '0139327791509776491-igl': [[u'4708430121420434387-igk', u'0139327791509776491-igh']] --> [[u'0139327791509776491-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3610536034903581483-igl': [[u'3610536034903581483-igh', u'6689633771134011375-igk', u'6689633771134011375-igh']] --> [[u'3610536034903581483-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6741903899259886010-igl': [[u'6741903899259886010-igh', u'8957710528055392055-igh', u'8957710528055392055-igk']] --> [[u'6741903899259886010-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '7620991763028213523-igl': [[u'8001459762178200715-igl', u'8001459762178200715-igh', u'7620991763028213523-igh']] --> [[u'7620991763028213523-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3654001128950720339-igl': [[u'6033021242520526803-igl', u'6033021242520526803-igh', u'3654001128950720339-igh']] --> [[u'6033021242520526803-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '0073626956148989884-igl': [[u'7182063963113590998-igh', u'7182063963113590998-igl', u'0073626956148989884-igh']] --> [[u'0073626956148989884-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3476072868109360172-igl': [[u'7820195697040431010-igh', u'7820195697040431010-igl', u'3476072868109360172-igh']] --> [[u'3476072868109360172-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '4202848474509221876-igl': [[u'8398174398765705064-igh', u'4202848474509221876-igh']] --> [[u'4202848474509221876-igh']]
[93mwarning[0m replaced input metafo for 1 total key in 229 seqs (229 clusters): paired-uids (see above, only printed the first 10 clusters)
  add_input_metafo(): transferring input metafo from <input_info> to <line> (counts in table are uids, not lines)
                            no-info  with-info  one-src ident. not-overwr. replaced
                    loci        0      353        0      353        0        0
             paired-uids        0      353        0      124        0      229
        water time: 0.1
hmm
  subcluster annotating 92 clusters with steps:  (0.8s) (0.3s) (0.1s) 
    subcluster annotation time 1.3
      total time: 1.7
   N clusters with all seqs:
        [94mh[0m  196 --> 304  [91m+108[0m
        [95mk[0m   47 --> 184  [91m+137[0m
        [92ml[0m   18 --> 92   [91m+74[0m
      total time: 63.9
[92mseed-partition-new-simu[0m          /home/dralph/work/partis/bin/partis partition --dont-write-git-info --paired-loci --paired-indir test/paired/new-results-slow/test/simu --parameter-dir test/paired/new-results-slow/test/parameters/simu --max-ccf-fail-frac 0.10 --is-simu --seed-unique-id 4523086687660472215-igh:4523086687660472215-igk --seed-loci igh:igk --random-seed 1 --n-procs 10 --paired-outdir test/paired/new-results-slow/seed-partition-new-simu
   removing seqs very different from seed seq
                           wrong/no     removed      singly         kept   missing
           locus  before   pairing    cdr3  hfrac    added   after  frac   true ids
             [94mh[0m     1000      796       199     3       21      23   0.023    [91m4[0m
             [95mk[0m      640      436       199     3       31      33   0.052    [91m4[0m
     adding seqs paired with uids we kept
           locus  before  added  after  kept frac
             [94mh[0m      23      50     73    0.073
             [95mk[0m      33      22     55    0.086
             [92ml[0m       0      17     17    0.048
      taken 56, paired with taken 89 (total 145)
[44mpartition[0m [94migh[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis partition --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igh --max-ccf-fail-frac 0.10 --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/single-chain/input-seqs-igh.fa --outfname test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/single-chain/partition-igh.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 73 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
partitioning     (with test/paired/new-results-slow/test/parameters/simu/igh/hmm)
smith-waterman
  vsearch: 73 / 73 v annotations (0 failed) with 14 v genes in 0.1 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml
      info for 73 / 73 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 16 (0.219) unproductive
        water time: 0.1
hmm
  caching all 73 naive sequences (0.4s)
   collapsed 73 queries into 44 clusters with identical naive seqs (0.0 sec)
  44 clusters with 10 procs (0.3s)
  44 clusters with 7 procs (0.3s)
  43 clusters with 5 procs (0.2s)
  43 clusters with 3 procs (0.3s)
  40 clusters with 2 procs (0.2s)
  40 clusters with 1 proc (0.8s)
      partition loop time: 2.2
getting annotations for final partition
  subcluster annotating 40 clusters with steps:  (0.4s) (0.1s) (0.1s) 
    subcluster annotation time 0.7
      total time: 3.6
[44mpartition[0m [94migk[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis partition --locus igk --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igk --max-ccf-fail-frac 0.10 --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/single-chain/input-seqs-igk.fa --outfname test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/single-chain/partition-igk.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 55 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
partitioning     (with test/paired/new-results-slow/test/parameters/simu/igk/hmm)
smith-waterman
  vsearch: 55 / 55 v annotations (0 failed) with 10 v genes in 0.1 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml
      info for 55 / 55 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 14 (0.255) unproductive
        water time: 0.1
hmm
  caching all 55 naive sequences (0.2s)
   collapsed 55 queries into 18 clusters with identical naive seqs (0.0 sec)
  18 clusters with 10 procs (0.2s)
  18 clusters with 7 procs (0.2s)
  17 clusters with 5 procs (0.2s)
  16 clusters with 3 procs (0.2s)
  15 clusters with 2 procs (0.2s)
  13 clusters with 1 proc (0.5s)
      partition loop time: 1.4
getting annotations for final partition
  subcluster annotating 13 clusters with steps:  (0.3s) (0.1s) (0.1s) (0.1s) 
    subcluster annotation time 0.7
      total time: 2.5
[44mpartition[0m [94migl[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis partition --locus igl --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igl --max-ccf-fail-frac 0.10 --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/single-chain/input-seqs-igl.fa --outfname test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/single-chain/partition-igl.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 17 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
partitioning     (with test/paired/new-results-slow/test/parameters/simu/igl/hmm)
smith-waterman
  vsearch: 17 / 17 v annotations (0 failed) with 6 v genes in 0.0 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml
      info for 17 / 17 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 3 (0.176) unproductive
        water time: 0.0
hmm
  caching all 17 naive sequences (0.2s)
   collapsed 17 queries into 9 clusters with identical naive seqs (0.0 sec)
  reducing n procs to number of clusters: 10 --> 9
  9 clusters with 9 procs (0.2s)
  9 clusters with 6 procs (0.1s)
  9 clusters with 4 procs (0.2s)
  8 clusters with 3 procs (0.1s)
  8 clusters with 2 procs (0.2s)
  8 clusters with 1 proc (0.3s)
      partition loop time: 1.0
getting annotations for final partition
  subcluster annotating 6 clusters with steps:  (0.2s) (0.1s) 
    subcluster annotation time 0.3
      total time: 1.6
[44mcombining[0m chains
   cleaning pair info for 145 seqs
     synchronized/fixed 0 pairs where one had no pair info after cleaning: [94mh[0m 0  [95mk[0m 0  [92ml[0m 0
[94migh+igk[0m: synchronizing heavy and light chain cluster paths
    removing badly paired seqs:      [93mwarning[0m adding missing per-seq key: mut_positions
  note: added 1 new input meta key to allowed keys (add 's'/plural to access it in the final annotations): mut_position (mut_positions)
12 total unpaired,  [94mh[0m 8  [95mk[0m 4
    merging igh+igk partitions
  [93mwarning[0m paired uids in line, but <translate_pids> wasn't set, so they won't be translated
   N clusters without bad/unpaired seqs:
        [94mh[0m   27 --> 28   [91m+1[0m
        [95mk[0m   12 --> 28   [91m+16[0m
    re-added unpaired seqs ([94mh[0m 8, [95mk[0m 4) to give total seqs in joint partitions: [94mh[0m 59  [95mk[0m 55
    [93mwarning[0m removed 927/1000 uids (leaving 73) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
    [93mwarning[0m removed 588/641 uids (leaving 53) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
    [93mwarning[0m added 2 / 59 missing ids as singletons to true partition, to match ids in inferred partition (restricting to unpaired_uids, i.e. probably these were unpaired seqs that were re-added to the inferred partition, but in the true partition were paired with the other chain)
    [93mwarning[0m added 4 / 59 missing ids as singletons to true partition, to match ids in inferred partition (giving up and adding whatever is needed, which is sometimes/maybe just from mispaired seqs)
  [94mh[0m ccfs:     purity  completeness
      single   1.000  0.933
       joint   1.000  0.933
    [93mwarning[0m removed 585/640 uids (leaving 55) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
    [93mwarning[0m removed 585/640 uids (leaving 55) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
  [95mk[0m ccfs:     purity  completeness
      single   0.455  1.000
       joint   0.929  0.867
  merge time 0.0
     removed 34 unseeded clusters (of 35 total, leaving 1) from igh joint partition
  need to get annotations for 1/1 joint igh clusters
  seed cluster size in best joint partition: 14, excluding seed seq: 13
[44mannotate[0m [94migh+igk[0m:[94m igh[0m
    removed 2 arg strs that were specific to action 'partition': --seed-unique-id 4523086687660472215-igh:4523086687660472215-igk
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis annotate --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igh --max-ccf-fail-frac 0.10 --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/igh+igk/input-seqs-igh.fa --outfname test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/igh+igk/partition-igh.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml --input-metafnames test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/igh+igk/meta-igh.yaml --input-partition-fname test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/igh+igk/partition-igh-only-partition.yaml
  --input-metafnames: added meta info for 14 sequences from test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/igh+igk/meta-igh.yaml: paired-uids loci
  --input-partition-fname: read best partition with 14 sequences in 1 clusters from test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/igh+igk/partition-igh-only-partition.yaml
annotating    (with test/paired/new-results-slow/test/parameters/simu/igh/hmm)
smith-waterman
  vsearch: 14 / 14 v annotations (0 failed) with 1 v gene in 0.1 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml
      info for 14 / 14 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 3 (0.214) unproductive
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '8914433970648843151-igh': [[u'8914433970648843151-igk', u'0559910604676036470-igh', u'0559910604676036470-igl']] --> [[u'8914433970648843151-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '2109520115720212689-igh': [[u'3609691689420195410-igk', u'3609691689420195410-igh', u'2109520115720212689-igk']] --> [[u'3609691689420195410-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '5039202285255278935-igh': [[u'2461637455519770869-igh', u'2461637455519770869-igl', u'5039202285255278935-igk']] --> [[u'5039202285255278935-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6823703535300105961-igh': [[u'6823703535300105961-igk', u'9095170894599338074-igk', u'9095170894599338074-igh']] --> [[u'6823703535300105961-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6945494824644493725-igh': [[u'6227700915007792549-igh', u'6227700915007792549-igl', u'6945494824644493725-igk']] --> [[u'6945494824644493725-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '1203107908624746468-igh': [[u'1203107908624746468-igk', u'8775682566313507815-igl', u'8775682566313507815-igh']] --> [[u'1203107908624746468-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '1143452071457066048-igh': [[u'1990286087041212677-igh', u'1990286087041212677-igk', u'1143452071457066048-igk']] --> [[u'1143452071457066048-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '7647129031959824413-igh': [[u'7647129031959824413-igk', u'2144676436648198936-igh', u'2144676436648198936-igl']] --> [[u'7647129031959824413-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '8618466487361197839-igh': [[u'5597120011826142724-igk', u'5597120011826142724-igh', u'8618466487361197839-igk']] --> [[u'8618466487361197839-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '5899049733785036092-igh': [[u'5899049733785036092-igk', u'1767326380528831116-igh']] --> [[u'5899049733785036092-igk']]
[93mwarning[0m replaced input metafo for 1 total key in 12 seqs (12 clusters): paired-uids (see above, only printed the first 10 clusters)
  add_input_metafo(): transferring input metafo from <input_info> to <line> (counts in table are uids, not lines)
                            no-info  with-info  one-src ident. not-overwr. replaced
                    loci        0       14        0       14        0        0
             paired-uids        0       14        0        2        0       12
        water time: 0.1
hmm
  subcluster annotating 1 cluster with steps:  (0.2s) (0.1s) (0.1s) 
    subcluster annotation time 0.4
      total time: 0.6
     removed 28 unseeded clusters (of 29 total, leaving 1) from igk joint partition
  need to get annotations for 1/1 joint igk clusters
  seed cluster size in best joint partition: 14, excluding seed seq: 13
[44mannotate[0m [94migh+igk[0m:[94m igk[0m
    removed 2 arg strs that were specific to action 'partition': --seed-unique-id 4523086687660472215-igh:4523086687660472215-igk
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis annotate --locus igk --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igk --max-ccf-fail-frac 0.10 --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/igh+igk/input-seqs-igk.fa --outfname test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/igh+igk/partition-igk.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml --input-metafnames test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/igh+igk/meta-igk.yaml --input-partition-fname test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/igh+igk/partition-igk-only-partition.yaml
  --input-metafnames: added meta info for 14 sequences from test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/igh+igk/meta-igk.yaml: paired-uids loci
  --input-partition-fname: read best partition with 14 sequences in 1 clusters from test/paired/new-results-slow/seed-partition-new-simu/seeds/4523086687660472215-igh+4523086687660472215-igk/igh+igk/partition-igk-only-partition.yaml
annotating    (with test/paired/new-results-slow/test/parameters/simu/igk/hmm)
smith-waterman
  vsearch: 14 / 14 v annotations (0 failed) with 1 v gene in 0.0 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml
      info for 14 / 14 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 3 (0.214) unproductive
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '8914433970648843151-igk': [[u'8914433970648843151-igh', u'0559910604676036470-igh', u'0559910604676036470-igl']] --> [[u'8914433970648843151-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3609691689420195410-igk': [[u'3609691689420195410-igh', u'2109520115720212689-igk', u'2109520115720212689-igh']] --> [[u'2109520115720212689-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '5039202285255278935-igk': [[u'2461637455519770869-igh', u'2461637455519770869-igl', u'5039202285255278935-igh']] --> [[u'5039202285255278935-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6823703535300105961-igk': [[u'6823703535300105961-igh', u'9095170894599338074-igk', u'9095170894599338074-igh']] --> [[u'6823703535300105961-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6945494824644493725-igk': [[u'6227700915007792549-igh', u'6227700915007792549-igl', u'6945494824644493725-igh']] --> [[u'6945494824644493725-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '1203107908624746468-igk': [[u'1203107908624746468-igh', u'8775682566313507815-igl', u'8775682566313507815-igh']] --> [[u'1203107908624746468-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '1143452071457066048-igk': [[u'1990286087041212677-igh', u'1990286087041212677-igk', u'1143452071457066048-igh']] --> [[u'1143452071457066048-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '7647129031959824413-igk': [[u'7647129031959824413-igh', u'2144676436648198936-igh', u'2144676436648198936-igl']] --> [[u'7647129031959824413-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '8618466487361197839-igk': [[u'5597120011826142724-igk', u'5597120011826142724-igh', u'8618466487361197839-igh']] --> [[u'8618466487361197839-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '5899049733785036092-igk': [[u'1767326380528831116-igh', u'5899049733785036092-igh']] --> [[u'5899049733785036092-igh']]
[93mwarning[0m replaced input metafo for 1 total key in 12 seqs (12 clusters): paired-uids (see above, only printed the first 10 clusters)
  add_input_metafo(): transferring input metafo from <input_info> to <line> (counts in table are uids, not lines)
                            no-info  with-info  one-src ident. not-overwr. replaced
                    loci        0       14        0       14        0        0
             paired-uids        0       14        0        2        0       12
        water time: 0.1
hmm
  subcluster annotating 1 cluster with steps:  (0.1s) (0.1s) (0.1s) 
    subcluster annotation time 0.3
      total time: 0.5
[94migh+igl[0m: synchronizing heavy and light chain cluster paths
    removing badly paired seqs:  11 total unpaired,  [94mh[0m 8  [92ml[0m 3
    merging igh+igl partitions
  [93mwarning[0m paired uids in line, but <translate_pids> wasn't set, so they won't be translated
   N clusters without bad/unpaired seqs:
        [94mh[0m    9 --> 9   
        [92ml[0m    5 --> 9    [91m+4[0m
    re-added unpaired seqs ([94mh[0m 8, [92ml[0m 3) to give total seqs in joint partitions: [94mh[0m 22  [92ml[0m 17
  merge time 0.0
     removed 16 unseeded clusters (of 16 total, leaving 0) from igh joint partition
     removed 10 unseeded clusters (of 10 total, leaving 0) from igl joint partition
   N clusters with all seqs:
        [94mh[0m   40 --> 1    [91m-39[0m
        [95mk[0m   13 --> 1    [91m-12[0m
      total time: 11.6
[92mget-selection-metrics-new-simu[0m   /home/dralph/work/partis/bin/partis get-selection-metrics --dont-write-git-info --paired-loci --existing-output-run-cfg paired --random-seed 1 --n-procs 10 --paired-outdir test/paired/new-results-slow/partition-new-simu --chosen-ab-fname test/paired/new-results-slow/get-selection-metrics-new-simu-chosen-abs.csv --ab-choice-cfg /home/dralph/work/partis/test/ab-choice-slow.yaml
[44mget-selection-metrics[0m [94migh+igk[0m:[94m igh[0m
[91mrun[0m /home/dralph/work/partis/bin/partis get-selection-metrics --locus igh --dont-write-git-info --random-seed 1 --n-procs 10 --chosen-ab-fname test/paired/new-results-slow/get-selection-metrics-new-simu-chosen-abs.csv --ab-choice-cfg /home/dralph/work/partis/test/ab-choice-slow.yaml --refuse-to-cache-parameters --outfname test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igh.yaml
  note: --parameter-dir not set, so using default: x-dummy-x
  note: by default we print/operate on *all* annotations in the output file, which in general can include annotations from non-best partititons and non-seed clusters (e.g. if --n-final-clusters was set). If you want to restrict to particular annotations, use one of --only-print-best-partition, --only-print-seed-clusters, or --only-print-queries-to-include-clusters
    getting trees for 15 clusters with sizes: 30 16 16 15 14 12 12 12 12 11 11 10 10 10 10
      starting 15 jobs
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/134364/fasttree.out /tmp/dralph/tree-inference/134364/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/847433/fasttree.out /tmp/dralph/tree-inference/847433/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/763774/fasttree.out /tmp/dralph/tree-inference/763774/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/255069/fasttree.out /tmp/dralph/tree-inference/255069/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/495435/fasttree.out /tmp/dralph/tree-inference/495435/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/449491/fasttree.out /tmp/dralph/tree-inference/449491/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/651592/fasttree.out /tmp/dralph/tree-inference/651592/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/788723/fasttree.out /tmp/dralph/tree-inference/788723/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/93859/fasttree.out /tmp/dralph/tree-inference/93859/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/28347/fasttree.out /tmp/dralph/tree-inference/28347/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/835765/fasttree.out /tmp/dralph/tree-inference/835765/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/432767/fasttree.out /tmp/dralph/tree-inference/432767/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/762280/fasttree.out /tmp/dralph/tree-inference/762280/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/2106/fasttree.out /tmp/dralph/tree-inference/2106/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/445387/fasttree.out /tmp/dralph/tree-inference/445387/input-seqs.fa
      made 15 fasttree trees (0.7s)
    tree origins: 15 ran fasttree
    getting selection metrics (lbi lbr aa-lbi aa-lbr cons-dist-aa) with inferred lines: 15 clusters with sizes 30 16 16 15 14 12 12 12 12 11 11 10 10 10 10
      skipping 203 smaller than 10
      setting default tau to 1 / 376 = 0.0027
    calculating normalized lb index and lb ratio and lb fraction with tau 0.0027
                [94miclust 0: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 8/30 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.058  mfreq 0.049  diff 0.008  abs(frac diff) 17%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0718    0.0518       1.4     0.0200     6876791330767964627-igh
              0.0744    0.0572       1.3     0.0172     2319097646327678068-igh
              0.0715    0.0545       1.3     0.0170     2615076489748740565-igh
              0.0693    0.0545       1.3     0.0148     6644733530721277222-igh
              0.0578    0.0436       1.3     0.0142     6306886061961573316-igh
              0.0571    0.0436       1.3     0.0135     2452404144692020598-igh
              0.0625    0.0490       1.3     0.0135     7668841143621032867-igh
              0.0562    0.0436       1.3     0.0126     6048823774239581715-igh
          10 with highest+lowest ratios:
              0.0718    0.0518       1.4     0.0200     6876791330767964627-igh
              0.0578    0.0436       1.3     0.0142     6306886061961573316-igh
              0.0715    0.0545       1.3     0.0170     2615076489748740565-igh
              0.0571    0.0436       1.3     0.0135     2452404144692020598-igh
              0.0744    0.0572       1.3     0.0172     2319097646327678068-igh
              0.0571    0.0436       1.3     0.0135     2452404144692020598-igh
              0.0744    0.0572       1.3     0.0172     2319097646327678068-igh
              0.0562    0.0436       1.3     0.0126     6048823774239581715-igh
              0.0625    0.0490       1.3     0.0135     7668841143621032867-igh
              0.0693    0.0545       1.3     0.0148     6644733530721277222-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 0): skipped 55/58 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: hir cgj asu dgj chm mpw his dgv hwy blp bdx biq cjs muw cik emy gou bgm fmq bfr agz adn imx enz gqt atz emx
      setting default tau to 1 / 376 = 0.0027
    calculating normalized lb index and lb ratio and lb fraction on aa tree with tau 0.0027
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 1): skipped 3/18 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: otv
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 2): skipped 3/18 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: aty
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 5): skipped 3/14 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: bel
                [94miclust 6: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 6/12 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.011  mfreq 0.009  diff 0.002  abs(frac diff) 25%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0101    0.0078       1.3     0.0023     0358407749477963402-igh
              0.0099    0.0078       1.3     0.0021     9150333179807655332-igh
              0.0069    0.0052       1.3     0.0017     5278222429319732205-igh
              0.0069    0.0052       1.3     0.0017     1173653640393029647-igh
              0.0069    0.0052       1.3     0.0017     2209652978875887091-igh
              0.0069    0.0052       1.3     0.0017     7702543552127737494-igh
          10 with highest+lowest ratios:
              0.0069    0.0052       1.3     0.0017     5278222429319732205-igh
              0.0069    0.0052       1.3     0.0017     1173653640393029647-igh
              0.0069    0.0052       1.3     0.0017     2209652978875887091-igh
              0.0069    0.0052       1.3     0.0017     7702543552127737494-igh
              0.0101    0.0078       1.3     0.0023     0358407749477963402-igh
              0.0069    0.0052       1.3     0.0017     1173653640393029647-igh
              0.0069    0.0052       1.3     0.0017     2209652978875887091-igh
              0.0069    0.0052       1.3     0.0017     7702543552127737494-igh
              0.0101    0.0078       1.3     0.0023     0358407749477963402-igh
              0.0099    0.0078       1.3     0.0021     9150333179807655332-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 6): skipped 16/20 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: eor krx dtx klq lmp aci goq
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 7): skipped 3/14 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: mqx
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 8): skipped 21/23 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: epz cns kpv ceq tuw lsv dvx bix iwz jrx
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 9): skipped 2/13 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: ajt
                [94miclust 10: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/11 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.060  mfreq 0.053  diff 0.007  abs(frac diff) 14%  ratio 1.1
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0570    0.0443       1.3     0.0126     3932056755864873677-igh
          10 with highest+lowest ratios:
              0.0570    0.0443       1.3     0.0126     3932056755864873677-igh
              0.0570    0.0443       1.3     0.0126     3932056755864873677-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 10): skipped 21/22 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: asv bwx gku kpu lsv lrs acw akn biv bqs
                [94miclust 11: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 4/10 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.056  mfreq 0.046  diff 0.010  abs(frac diff) 22%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0754    0.0541       1.4     0.0213     7480450235991729990-igh
              0.0598    0.0432       1.4     0.0165     9060690413869285459-igh
              0.0592    0.0459       1.3     0.0132     2096932136144435029-igh
              0.0485    0.0378       1.3     0.0107     8303954895098811094-igh
          10 with highest+lowest ratios:
              0.0754    0.0541       1.4     0.0213     7480450235991729990-igh
              0.0598    0.0432       1.4     0.0165     9060690413869285459-igh
              0.0592    0.0459       1.3     0.0132     2096932136144435029-igh
              0.0485    0.0378       1.3     0.0107     8303954895098811094-igh
              0.0485    0.0378       1.3     0.0107     8303954895098811094-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 11): skipped 19/20 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: cdg prv biz ipt ejz egl cpr tuw ejs
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 14): skipped 2/12 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: bpu
  writing selection metrics to test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igh-selection-metrics.yaml
      total time: 1.1
[44mget-selection-metrics[0m [94migh+igk[0m:[94m igk[0m
[91mrun[0m /home/dralph/work/partis/bin/partis get-selection-metrics --locus igk --dont-write-git-info --random-seed 1 --n-procs 10 --chosen-ab-fname test/paired/new-results-slow/get-selection-metrics-new-simu-chosen-abs.csv --ab-choice-cfg /home/dralph/work/partis/test/ab-choice-slow.yaml --refuse-to-cache-parameters --outfname test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igk.yaml
  note: --parameter-dir not set, so using default: x-dummy-x
  note: by default we print/operate on *all* annotations in the output file, which in general can include annotations from non-best partititons and non-seed clusters (e.g. if --n-final-clusters was set). If you want to restrict to particular annotations, use one of --only-print-best-partition, --only-print-seed-clusters, or --only-print-queries-to-include-clusters
    getting trees for 15 clusters with sizes: 31 20 18 16 13 13 12 12 12 12 11 11 11 10 10
      starting 15 jobs
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/134364/fasttree.out /tmp/dralph/tree-inference/134364/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/847433/fasttree.out /tmp/dralph/tree-inference/847433/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/763774/fasttree.out /tmp/dralph/tree-inference/763774/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/255069/fasttree.out /tmp/dralph/tree-inference/255069/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/495435/fasttree.out /tmp/dralph/tree-inference/495435/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/449491/fasttree.out /tmp/dralph/tree-inference/449491/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/651592/fasttree.out /tmp/dralph/tree-inference/651592/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/788723/fasttree.out /tmp/dralph/tree-inference/788723/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/93859/fasttree.out /tmp/dralph/tree-inference/93859/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/28347/fasttree.out /tmp/dralph/tree-inference/28347/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/835765/fasttree.out /tmp/dralph/tree-inference/835765/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/432767/fasttree.out /tmp/dralph/tree-inference/432767/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/762280/fasttree.out /tmp/dralph/tree-inference/762280/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/2106/fasttree.out /tmp/dralph/tree-inference/2106/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/445387/fasttree.out /tmp/dralph/tree-inference/445387/input-seqs.fa
      made 15 fasttree trees (0.7s)
    tree origins: 15 ran fasttree
    getting selection metrics (lbi lbr aa-lbi aa-lbr cons-dist-aa) with inferred lines: 15 clusters with sizes 31 20 18 16 13 13 12 12 12 12 11 11 11 10 10
      skipping 173 smaller than 10
      setting default tau to 1 / 346 = 0.0029
    calculating normalized lb index and lb ratio and lb fraction with tau 0.0029
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 0): skipped 3/33 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: emx
      setting default tau to 1 / 346 = 0.0029
    calculating normalized lb index and lb ratio and lb fraction on aa tree with tau 0.0029
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 2): skipped 3/20 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: aty
                [94miclust 3: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 9/16 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.004  mfreq 0.003  diff 0.001  abs(frac diff) 44%  ratio 1.4
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0080    0.0062       1.3     0.0018     4815522839738366695-igk
              0.0080    0.0062       1.3     0.0017     2454518544273535595-igk
              0.0048    0.0031       1.6     0.0017     3492568178748296573-igk
              0.0048    0.0031       1.6     0.0017     4025228959598981896-igk
              0.0048    0.0031       1.6     0.0017     2801944979963113962-igk
              0.0048    0.0031       1.6     0.0017     5597120011826142724-igk
              0.0048    0.0031       1.5     0.0017     6262052391676574460-igk
              0.0048    0.0031       1.5     0.0017     1181690528959207288-igk
              0.0043    0.0031       1.4     0.0011     5255033430964023824-igk
          10 with highest+lowest ratios:
              0.0048    0.0031       1.6     0.0017     3492568178748296573-igk
              0.0048    0.0031       1.6     0.0017     4025228959598981896-igk
              0.0048    0.0031       1.6     0.0017     2801944979963113962-igk
              0.0048    0.0031       1.6     0.0017     5597120011826142724-igk
              0.0048    0.0031       1.5     0.0017     6262052391676574460-igk
              0.0048    0.0031       1.5     0.0017     6262052391676574460-igk
              0.0048    0.0031       1.5     0.0017     1181690528959207288-igk
              0.0043    0.0031       1.4     0.0011     5255033430964023824-igk
              0.0080    0.0062       1.3     0.0018     4815522839738366695-igk
              0.0080    0.0062       1.3     0.0017     2454518544273535595-igk
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 3): skipped 11/22 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: fow ces eiv cqv akt
                [94miclust 6: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 2/12 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.006  mfreq 0.005  diff 0.001  abs(frac diff) 26%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0043    0.0031       1.4     0.0012     8668791847164410546-igk
              0.0043    0.0031       1.4     0.0011     2388088669998545015-igk
          10 with highest+lowest ratios:
              0.0043    0.0031       1.4     0.0012     8668791847164410546-igk
              0.0043    0.0031       1.4     0.0011     2388088669998545015-igk
              0.0043    0.0031       1.4     0.0012     8668791847164410546-igk
              0.0043    0.0031       1.4     0.0011     2388088669998545015-igk
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 6): skipped 7/16 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: lmp krx hry
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 7): skipped 2/14 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: mqx
                [94miclust 12: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 3/11 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.011  mfreq 0.010  diff 0.001  abs(frac diff) 19%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0081    0.0061       1.3     0.0021     3398506734141505302-igk
              0.0040    0.0030       1.3     0.0009     1907831848264717695-igk
              0.0040    0.0030       1.3     0.0009     1542716588892178963-igk
          10 with highest+lowest ratios:
              0.0081    0.0061       1.3     0.0021     3398506734141505302-igk
              0.0040    0.0030       1.3     0.0009     1907831848264717695-igk
              0.0040    0.0030       1.3     0.0009     1542716588892178963-igk
              0.0040    0.0030       1.3     0.0009     1907831848264717695-igk
              0.0040    0.0030       1.3     0.0009     1542716588892178963-igk
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 12): skipped 10/16 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: aes dno chl elw
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 14): skipped 2/12 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: bpu
  writing selection metrics to test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igk-selection-metrics.yaml
      total time: 1.1
[44mget-selection-metrics[0m [94migh+igl[0m:[94m igh[0m
[91mrun[0m /home/dralph/work/partis/bin/partis get-selection-metrics --locus igh --dont-write-git-info --random-seed 1 --n-procs 10 --chosen-ab-fname test/paired/new-results-slow/get-selection-metrics-new-simu-chosen-abs.csv --ab-choice-cfg /home/dralph/work/partis/test/ab-choice-slow.yaml --refuse-to-cache-parameters --outfname test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igh.yaml
  note: --parameter-dir not set, so using default: x-dummy-x
  note: by default we print/operate on *all* annotations in the output file, which in general can include annotations from non-best partititons and non-seed clusters (e.g. if --n-final-clusters was set). If you want to restrict to particular annotations, use one of --only-print-best-partition, --only-print-seed-clusters, or --only-print-queries-to-include-clusters
    getting trees for 8 clusters with sizes: 23 20 20 15 15 10 10 10
      starting 8 jobs
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/134364/fasttree.out /tmp/dralph/tree-inference/134364/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/847433/fasttree.out /tmp/dralph/tree-inference/847433/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/763774/fasttree.out /tmp/dralph/tree-inference/763774/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/255069/fasttree.out /tmp/dralph/tree-inference/255069/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/495435/fasttree.out /tmp/dralph/tree-inference/495435/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/449491/fasttree.out /tmp/dralph/tree-inference/449491/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/651592/fasttree.out /tmp/dralph/tree-inference/651592/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/788723/fasttree.out /tmp/dralph/tree-inference/788723/input-seqs.fa
      made 8 fasttree trees (0.4s)
    tree origins: 8 ran fasttree
    getting selection metrics (lbi lbr aa-lbi aa-lbr cons-dist-aa) with inferred lines: 8 clusters with sizes 23 20 20 15 15 10 10 10
      skipping 141 smaller than 10
      setting default tau to 1 / 388 = 0.0026
    calculating normalized lb index and lb ratio and lb fraction with tau 0.0026
                [94miclust 0: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 4/23 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.122  mfreq 0.100  diff 0.022  abs(frac diff) 22%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.1183    0.0883       1.3     0.0300     6955957082236828603-igh
              0.1283    0.0987       1.3     0.0296     5853636970836500150-igh
              0.1269    0.1013       1.3     0.0256     6138658465371282053-igh
              0.1176    0.0935       1.3     0.0241     4784629625746675127-igh
          10 with highest+lowest ratios:
              0.1183    0.0883       1.3     0.0300     6955957082236828603-igh
              0.1283    0.0987       1.3     0.0296     5853636970836500150-igh
              0.1176    0.0935       1.3     0.0241     4784629625746675127-igh
              0.1269    0.1013       1.3     0.0256     6138658465371282053-igh
              0.1269    0.1013       1.3     0.0256     6138658465371282053-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 0): skipped 43/45 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: eqy nqw mnw ahp ceq eiq acg ghr msy gjy bgi iqw fnp dqy drw hnq bqr abu ego djm kmz
      setting default tau to 1 / 388 = 0.0026
    calculating normalized lb index and lb ratio and lb fraction on aa tree with tau 0.0026
                [94miclust 1: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 11/20 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.009  mfreq 0.007  diff 0.002  abs(frac diff) 40%  ratio 1.4
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0128    0.0083       1.5     0.0045     8775682566313507815-igh
              0.0115    0.0083       1.4     0.0031     2461637455519770869-igh
              0.0056    0.0028       2.0     0.0029     1965112335171924133-igh
              0.0080    0.0055       1.4     0.0024     4000092761340921148-igh
              0.0080    0.0055       1.4     0.0024     3786930796831737360-igh
              0.0051    0.0028       1.8     0.0023     3362630117294489214-igh
              0.0074    0.0055       1.3     0.0019     2616898053060376001-igh
              0.0074    0.0055       1.3     0.0019     7820195697040431010-igh
              0.0074    0.0055       1.3     0.0019     4505315201193285190-igh
              0.0042    0.0028       1.5     0.0014     8077990749694551065-igh
          10 with highest+lowest ratios:
              0.0056    0.0028       2.0     0.0029     1965112335171924133-igh
              0.0051    0.0028       1.8     0.0023     3362630117294489214-igh
              0.0128    0.0083       1.5     0.0045     8775682566313507815-igh
              0.0042    0.0028       1.5     0.0014     8077990749694551065-igh
              0.0042    0.0028       1.5     0.0014     4093280625760375699-igh
              0.0080    0.0055       1.4     0.0024     3786930796831737360-igh
              0.0115    0.0083       1.4     0.0031     2461637455519770869-igh
              0.0074    0.0055       1.3     0.0019     2616898053060376001-igh
              0.0074    0.0055       1.3     0.0019     7820195697040431010-igh
              0.0074    0.0055       1.3     0.0019     4505315201193285190-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 1): skipped 29/35 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: lsv ehu kxy kpy bru ejk dsy air fqz dfl ego bgw gju nrv
                [94miclust 2: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 13/20 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.013  mfreq 0.011  diff 0.003  abs(frac diff) 30%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0210    0.0160       1.3     0.0050     7485864413106578763-igh
              0.0182    0.0133       1.4     0.0049     2178837374217242336-igh
              0.0205    0.0160       1.3     0.0046     3587729338447929356-igh
              0.0204    0.0160       1.3     0.0045     3826262325080392732-igh
              0.0204    0.0160       1.3     0.0045     8839404431690313149-igh
              0.0150    0.0106       1.4     0.0043     2398837883579055343-igh
              0.0134    0.0106       1.3     0.0027     5189093119842684666-igh
              0.0077    0.0053       1.4     0.0023     8067768604515369897-igh
              0.0077    0.0053       1.4     0.0023     8716777648178712130-igh
              0.0103    0.0080       1.3     0.0023     9071650922873748319-igh
          10 with highest+lowest ratios:
              0.0042    0.0027       1.6     0.0015     8261745111577074408-igh
              0.0077    0.0053       1.4     0.0023     8067768604515369897-igh
              0.0077    0.0053       1.4     0.0023     8716777648178712130-igh
              0.0038    0.0027       1.4     0.0012     8695259348092490163-igh
              0.0076    0.0053       1.4     0.0022     7046661413725125308-igh
              0.0103    0.0080       1.3     0.0023     9071650922873748319-igh
              0.0205    0.0160       1.3     0.0046     3587729338447929356-igh
              0.0204    0.0160       1.3     0.0045     3826262325080392732-igh
              0.0204    0.0160       1.3     0.0045     8839404431690313149-igh
              0.0134    0.0106       1.3     0.0027     5189093119842684666-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 2): skipped 29/33 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: opt cnw dsx hiv bfk bvz fms iqs eor dox bln iwz
                [94miclust 3: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 4/15 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.026  mfreq 0.022  diff 0.004  abs(frac diff) 19%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0476    0.0364       1.3     0.0113     3654001128950720339-igh
              0.0476    0.0364       1.3     0.0113     4202848474509221876-igh
              0.0367    0.0260       1.4     0.0107     5481557210492438176-igh
              0.0038    0.0026       1.4     0.0012     6033021242520526803-igh
          10 with highest+lowest ratios:
              0.0038    0.0026       1.4     0.0012     6033021242520526803-igh
              0.0367    0.0260       1.4     0.0107     5481557210492438176-igh
              0.0476    0.0364       1.3     0.0113     3654001128950720339-igh
              0.0476    0.0364       1.3     0.0113     4202848474509221876-igh
              0.0476    0.0364       1.3     0.0113     4202848474509221876-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 3): skipped 25/28 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: tuz brx bfi iot jlr nvz doz otz acv lrx csw bjm
                [94miclust 5: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 4/10 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.004  mfreq 0.004  diff 0.001  abs(frac diff) 32%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0037    0.0026       1.4     0.0011     8165968718963581203-igh
              0.0037    0.0026       1.4     0.0011     5267873118142944264-igh
              0.0037    0.0026       1.4     0.0011     4353198980488651414-igh
              0.0037    0.0026       1.4     0.0011     5365170873092825911-igh
          10 with highest+lowest ratios:
              0.0037    0.0026       1.4     0.0011     8165968718963581203-igh
              0.0037    0.0026       1.4     0.0011     5267873118142944264-igh
              0.0037    0.0026       1.4     0.0011     4353198980488651414-igh
              0.0037    0.0026       1.4     0.0011     5365170873092825911-igh
              0.0037    0.0026       1.4     0.0011     5365170873092825911-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 5): skipped 5/13 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: fty ily
                [94miclust 6: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/10 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.051  mfreq 0.045  diff 0.006  abs(frac diff) 14%  ratio 1.1
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0584    0.0426       1.4     0.0158     8293430764023338389-igh
          10 with highest+lowest ratios:
              0.0584    0.0426       1.4     0.0158     8293430764023338389-igh
              0.0584    0.0426       1.4     0.0158     8293430764023338389-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 6): skipped 19/20 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: bpq fnv gpx bgv ptx dwx gjq aqx eqv
  writing selection metrics to test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igh-selection-metrics.yaml
      total time: 0.7
[44mget-selection-metrics[0m [94migh+igl[0m:[94m igl[0m
[91mrun[0m /home/dralph/work/partis/bin/partis get-selection-metrics --locus igl --dont-write-git-info --random-seed 1 --n-procs 10 --chosen-ab-fname test/paired/new-results-slow/get-selection-metrics-new-simu-chosen-abs.csv --ab-choice-cfg /home/dralph/work/partis/test/ab-choice-slow.yaml --refuse-to-cache-parameters --outfname test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igl.yaml
  note: --parameter-dir not set, so using default: x-dummy-x
  note: by default we print/operate on *all* annotations in the output file, which in general can include annotations from non-best partititons and non-seed clusters (e.g. if --n-final-clusters was set). If you want to restrict to particular annotations, use one of --only-print-best-partition, --only-print-seed-clusters, or --only-print-queries-to-include-clusters
    getting trees for 6 clusters with sizes: 23 21 18 17 13 10
      starting 6 jobs
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/134364/fasttree.out /tmp/dralph/tree-inference/134364/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/847433/fasttree.out /tmp/dralph/tree-inference/847433/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/763774/fasttree.out /tmp/dralph/tree-inference/763774/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/255069/fasttree.out /tmp/dralph/tree-inference/255069/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/495435/fasttree.out /tmp/dralph/tree-inference/495435/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/449491/fasttree.out /tmp/dralph/tree-inference/449491/input-seqs.fa
      made 6 fasttree trees (0.2s)
    tree origins: 6 ran fasttree
    getting selection metrics (lbi lbr aa-lbi aa-lbr cons-dist-aa) with inferred lines: 6 clusters with sizes 23 21 18 17 13 10
      skipping 86 smaller than 10
      setting default tau to 1 / 340 = 0.0029
    calculating normalized lb index and lb ratio and lb fraction with tau 0.0029
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 0): skipped 35/41 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: hjv fiv oxz aev jox bhu dsu det cgy gjm kls kmp chx hrz afv npv ilz
      setting default tau to 1 / 340 = 0.0029
    calculating normalized lb index and lb ratio and lb fraction on aa tree with tau 0.0029
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 1): skipped 28/34 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: bcl bov ctx mwx fuz isv giy hlp hil cgx lns rty
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 3): skipped 2/19 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: lnz
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 5): skipped 2/12 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: fmq
  writing selection metrics to test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igl-selection-metrics.yaml
      total time: 0.4
[44mgetting combined h/l selection metrics[0m
    [93mwarning[0m check_concordance_of_cpath_and_annotations(): missing annotations for 3/184 clusters in best partition with sizes: 12, 3, 3
        7 extra annotations (i.e. they're for clusters not in best partition) with sizes: 9 1 2 2 1 1 2
          missing 'best' cluster with size 12 overlaps with the following (overlap/size): 9/9  1/1  2/2
          missing 'best' cluster with size 3 overlaps with the following (overlap/size): 2/2  1/1
          missing 'best' cluster with size 3 overlaps with the following (overlap/size): 1/1  2/2
          extra annotation with size 9 overlaps with the following best clusters (overlap/size): 9/12
          extra annotation with size 1 overlaps with the following best clusters (overlap/size): 1/12
          extra annotation with size 2 overlaps with the following best clusters (overlap/size): 2/12
          extra annotation with size 2 overlaps with the following best clusters (overlap/size): 2/3
          extra annotation with size 1 overlaps with the following best clusters (overlap/size): 1/3
          extra annotation with size 1 overlaps with the following best clusters (overlap/size): 1/3
          extra annotation with size 2 overlaps with the following best clusters (overlap/size): 2/3
      [93mwarning[0m missing annotation for light chain (size 12, paired with size 12) when finding cluster pairs 5872920994329646782-igk:8171845956200653284-igk:4002100502083609224-igk:4579010110633033814-igk:6044556374369155733-igk:2989182323568059156-igk:2582025668858993185-igk:1977076583322723118-igk:9086687197475210553-igk:0576996760187426903-igk:2301249799363979868-igk:0206115397958573295-igk 5872920994329646782-igh:8171845956200653284-igh:4002100502083609224-igh:4579010110633033814-igh:6044556374369155733-igh:0083509690903049153-igh:2582025668858993185-igh:1977076583322723118-igh:8583512053381950544-igh:0576996760187426903-igh:2301249799363979868-igh:1553646224832994151-igh
      [93mwarning[0m missing annotation for light chain (size 3, paired with size 4) when finding cluster pairs 2607524032678834652-igk:9106924685473859836-igk:0979093493647212232-igk 2607524032678834652-igh:9106924685473859836-igh:0979093493647212232-igh:3023195168650439843-igh
      [93mwarning[0m missing annotation for light chain (size 3, paired with size 4) when finding cluster pairs 2695972733855577005-igk:5715165097736048681-igk:4708430121420434387-igk 3837343681554284630-igh:5715165097736048681-igh:5008676330928762598-igh:4569807408685883288-igh
    igh+igk: 169 unpaired light clusters after finding h/l cluster pairs
    igh+igk: skipped 35 annotations with zero length paired uids
    igh+igk: skipped 168 annotations with N h or l ids < 10
    igh+igl: 86 unpaired light clusters after finding h/l cluster pairs
    igh+igl: skipped 63 annotations with zero length paired uids
    igh+igl: skipped 80 annotations with N h or l ids < 10
            cons seq not observed
        less than 0.75 (4 / 30 = 0.13) of h seqs have indels, so not using input seqs for cons seq
        less than 0.75 (8 / 31 = 0.26) of l seqs have indels, so not using input seqs for cons seq
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 3704075990351253881-igh 3704075990351253881-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 0635152905758611517-igh 0635152905758611517-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 7032505510269083027-igh 7032505510269083027-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 0061262755932579060-igh 0061262755932579060-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 2452404144692020598-igh 2452404144692020598-igk
            cons seq not observed
        less than 0.75 (2 / 23 = 0.09) of h seqs have indels, so not using input seqs for cons seq
        less than 0.75 (3 / 21 = 0.14) of l seqs have indels, so not using input seqs for cons seq
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 4499834205643852689-igh 4499834205643852689-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 4889218450041764731-igh 4889218450041764731-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 6227700915007792549-igh 6227700915007792549-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 1819524752283253519-igh 1819524752283253519-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 6955957082236828603-igh 6955957082236828603-igl
            cons seq not observed
        less than 0.75 (3 / 20 = 0.15) of h seqs have indels, so not using input seqs for cons seq
        less than 0.75 (3 / 23 = 0.13) of l seqs have indels, so not using input seqs for cons seq
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 2398837883579055343-igh 2398837883579055343-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 4343867333112679360-igh 4343867333112679360-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 8261745111577074408-igh 8261745111577074408-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 8695259348092490163-igh 8695259348092490163-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 7904791124507212612-igh 7904791124507212612-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 4505315201193285190-igh 4505315201193285190-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 5828645892520334597-igh 5828645892520334597-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 4236628509697304461-igh 4236628509697304461-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 6540642653807253184-igh 3534112402370671666-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 2585485840699877916-igh 2585485840699877916-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 0056362983030679170-igh 0056362983030679170-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 7900195018352700834-igh 7900195018352700834-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 7332233745859530338-igh 7720944207401730279-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 5852338261867493884-igh 5852338261867493884-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 6182844226042757980-igh 6182844226042757980-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 2801944979963113962-igh 2801944979963113962-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 1634066985887588950-igh 1634066985887588950-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 2454518544273535595-igh 2454518544273535595-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 6823703535300105961-igh 6823703535300105961-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 1143452071457066048-igh 1143452071457066048-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 8100630872905721129-igh 8100630872905721129-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 4523086687660472215-igh 4523086687660472215-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 1203107908624746468-igh 1203107908624746468-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 0073626956148989884-igh 0073626956148989884-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 6033021242520526803-igh 3654001128950720339-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 6949681420241980734-igh 6949681420241980734-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 8800982281429777817-igh 8800982281429777817-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 8404577688496819834-igh 8404577688496819834-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 5166396785437299876-igh 5166396785437299876-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 3571714580319434900-igh 3571714580319434900-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 3491746487107109516-igh 3491746487107109516-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 8515427139903286296-igh 8515427139903286296-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 2850858559156933498-igh 2850858559156933498-igl
    getting trees for 12 clusters with sizes: 28 20 19 18 16 16 14 14 13 13 11 11
      all fasttree outputs exist, not rerunning (e.g. test/paired/new-results-slow/partition-new-simu/fasttree/iclust-0/fasttree.out)
    tree origins: 12 ran fasttree
    getting selection metrics (lbi lbr aa-lbi aa-lbr cons-dist-aa) with inferred lines: 12 clusters with sizes 28 20 19 18 16 16 14 14 13 13 11 11
      skipping 6 smaller than 10
      setting default tau to 1 / 726 = 0.0014
    calculating normalized lb index and lb ratio and lb fraction with tau 0.0014
                [94miclust 0: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 7/28 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.031  mfreq 0.026  diff 0.005  abs(frac diff) 19%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0362    0.0262       1.4     0.0100     6876791330767964627_contig_igh+igk
              0.0375    0.0289       1.3     0.0085     2319097646327678068_contig_igh+igk
              0.0303    0.0220       1.4     0.0083     6306886061961573316_contig_igh+igk
              0.0352    0.0275       1.3     0.0077     6644733530721277222_contig_igh+igk
              0.0297    0.0220       1.3     0.0076     2452404144692020598_contig_igh+igk
              0.0316    0.0248       1.3     0.0068     7668841143621032867_contig_igh+igk
              0.0284    0.0220       1.3     0.0064     6048823774239581715_contig_igh+igk
          10 with highest+lowest ratios:
              0.0362    0.0262       1.4     0.0100     6876791330767964627_contig_igh+igk
              0.0303    0.0220       1.4     0.0083     6306886061961573316_contig_igh+igk
              0.0297    0.0220       1.3     0.0076     2452404144692020598_contig_igh+igk
              0.0375    0.0289       1.3     0.0085     2319097646327678068_contig_igh+igk
              0.0284    0.0220       1.3     0.0064     6048823774239581715_contig_igh+igk
              0.0297    0.0220       1.3     0.0076     2452404144692020598_contig_igh+igk
              0.0375    0.0289       1.3     0.0085     2319097646327678068_contig_igh+igk
              0.0284    0.0220       1.3     0.0064     6048823774239581715_contig_igh+igk
              0.0352    0.0275       1.3     0.0077     6644733530721277222_contig_igh+igk
              0.0316    0.0248       1.3     0.0068     7668841143621032867_contig_igh+igk
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 0): skipped 51/54 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: nqt mxy cem lnv cin lsw nry amz lmo cgp alt lwz bly jxy egr dfw irs muy cpz emw glz gqx bgz iqw dot
      setting default tau to 1 / 726 = 0.0014
    calculating normalized lb index and lb ratio and lb fraction on aa tree with tau 0.0014
                [94miclust 1: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/20 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.019  mfreq 0.017  diff 0.003  abs(frac diff) 18%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0060    0.0041       1.4     0.0018     2130263928975123369_contig_igh+igl
          10 with highest+lowest ratios:
              0.0060    0.0041       1.4     0.0018     2130263928975123369_contig_igh+igl
              0.0060    0.0041       1.4     0.0018     2130263928975123369_contig_igh+igl
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 1): skipped 33/37 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: coq ipu kpu dou act bex ewy loq dmu env emr elp cix ruw fju efg
                [94miclust 2: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 11/19 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.075  mfreq 0.060  diff 0.014  abs(frac diff) 24%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0775    0.0574       1.4     0.0202     5853636970836500150_contig_igh+igl
              0.0821    0.0642       1.3     0.0179     8311074164641366847_contig_igh+igl
              0.0723    0.0546       1.3     0.0176     4784629625746675127_contig_igh+igl
              0.0814    0.0642       1.3     0.0172     1819524752283253519_contig_igh+igl
              0.0745    0.0574       1.3     0.0171     5919867511249987295_contig_igh+igl
              0.0702    0.0533       1.3     0.0169     1445396001691429771_contig_igh+igl
              0.0767    0.0601       1.3     0.0166     0432142795031670078_contig_igh+igl
              0.0722    0.0560       1.3     0.0162     6127278394920749241_contig_igh+igl
              0.0787    0.0628       1.3     0.0159     6227700915007792549_contig_igh+igl
              0.0689    0.0546       1.3     0.0143     1555431470839201071_contig_igh+igl
          10 with highest+lowest ratios:
              0.0775    0.0574       1.4     0.0202     5853636970836500150_contig_igh+igl
              0.0723    0.0546       1.3     0.0176     4784629625746675127_contig_igh+igl
              0.0702    0.0533       1.3     0.0169     1445396001691429771_contig_igh+igl
              0.0745    0.0574       1.3     0.0171     5919867511249987295_contig_igh+igl
              0.0722    0.0560       1.3     0.0162     6127278394920749241_contig_igh+igl
              0.0767    0.0601       1.3     0.0166     0432142795031670078_contig_igh+igl
              0.0814    0.0642       1.3     0.0172     1819524752283253519_contig_igh+igl
              0.0689    0.0546       1.3     0.0143     1555431470839201071_contig_igh+igl
              0.0787    0.0628       1.3     0.0159     6227700915007792549_contig_igh+igl
              0.0701    0.0560       1.3     0.0141     2076106142634767732_contig_igh+igl
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 2): skipped 37/38 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: kpr bgk fhi bns ahi hqu suy htu csy ajm jks cit cmu mot qvy cgs bip noy
                [94miclust 3: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 14/18 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.005  mfreq 0.004  diff 0.002  abs(frac diff) 46%  ratio 1.5
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0104    0.0071       1.5     0.0033     8161911071997292947_contig_igh+igl
              0.0073    0.0043       1.7     0.0031     2461637455519770869_contig_igh+igl
              0.0083    0.0057       1.5     0.0026     5828645892520334597_contig_igh+igl
              0.0068    0.0043       1.6     0.0025     1712719108382703708-igh+1965112335171924133-igl
              0.0068    0.0043       1.6     0.0025     6540642653807253184-igh+3534112402370671666-igl
              0.0068    0.0043       1.6     0.0025     2585485840699877916_contig_igh+igl
              0.0068    0.0043       1.6     0.0025     4236628509697304461_contig_igh+igl
              0.0053    0.0028       1.9     0.0024     2616898053060376001_contig_igh+igl
              0.0053    0.0028       1.9     0.0024     4000092761340921148_contig_igh+igl
              0.0037    0.0014       2.6     0.0023     3362630117294489214_contig_igh+igl
          10 with highest+lowest ratios:
              0.0037    0.0014       2.6     0.0023     3362630117294489214_contig_igh+igl
              0.0053    0.0028       1.9     0.0024     2616898053060376001_contig_igh+igl
              0.0053    0.0028       1.9     0.0024     4000092761340921148_contig_igh+igl
              0.0073    0.0043       1.7     0.0031     2461637455519770869_contig_igh+igl
              0.0047    0.0028       1.7     0.0019     7820195697040431010_contig_igh+igl
              0.0068    0.0043       1.6     0.0025     4236628509697304461_contig_igh+igl
              0.0104    0.0071       1.5     0.0033     8161911071997292947_contig_igh+igl
              0.0083    0.0057       1.5     0.0026     5828645892520334597_contig_igh+igl
              0.0006    0.0014       0.4     -0.0009     8077990749694551065_contig_igh+igl
              0.0006    0.0014       0.4     -0.0009     4093280625760375699_contig_igh+igl
          [93mwarning[0m nuc branch length 0.0006 and hamming frac 0.0015 very different (ratio 0.37) for branch between 8077990749694551065_contig_igh+igl --> 0237243385321033557_contig_igh+igl
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 3): skipped 21/29 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: jou gsx mwy kqx ahn bnv bjs pqz cgr glr
                [94miclust 4: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/16 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.001  mfreq 0.000  diff 0.000  abs(frac diff) 29%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0020    0.0014       1.4     0.0006     6182844226042757980_contig_igh+igk
          10 with highest+lowest ratios:
              0.0020    0.0014       1.4     0.0006     6182844226042757980_contig_igh+igk
              0.0020    0.0014       1.4     0.0006     6182844226042757980_contig_igh+igk
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 4): skipped 3/18 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: mqz
                [94miclust 5: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 9/16 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.003  mfreq 0.002  diff 0.001  abs(frac diff) 88%  ratio 1.9
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0050    0.0027       1.9     0.0023     2454518544273535595_contig_igh+igk
              0.0050    0.0027       1.8     0.0023     1181690528959207288_contig_igh+igk
              0.0045    0.0027       1.7     0.0018     1634066985887588950_contig_igh+igk
              0.0031    0.0014       2.2     0.0017     5255033430964023824_contig_igh+igk
              0.0031    0.0014       2.2     0.0017     6262052391676574460_contig_igh+igk
              0.0031    0.0014       2.2     0.0017     2801944979963113962_contig_igh+igk
              0.0025    0.0014       1.9     0.0012     3492568178748296573_contig_igh+igk
              0.0025    0.0014       1.9     0.0012     4025228959598981896_contig_igh+igk
              0.0025    0.0014       1.9     0.0012     5597120011826142724_contig_igh+igk
          10 with highest+lowest ratios:
              0.0031    0.0014       2.2     0.0017     5255033430964023824_contig_igh+igk
              0.0031    0.0014       2.2     0.0017     6262052391676574460_contig_igh+igk
              0.0031    0.0014       2.2     0.0017     2801944979963113962_contig_igh+igk
              0.0050    0.0027       1.9     0.0023     2454518544273535595_contig_igh+igk
              0.0025    0.0014       1.9     0.0012     3492568178748296573_contig_igh+igk
              0.0025    0.0014       1.9     0.0012     3492568178748296573_contig_igh+igk
              0.0025    0.0014       1.9     0.0012     4025228959598981896_contig_igh+igk
              0.0025    0.0014       1.9     0.0012     5597120011826142724_contig_igh+igk
              0.0050    0.0027       1.8     0.0023     1181690528959207288_contig_igh+igk
              0.0045    0.0027       1.7     0.0018     1634066985887588950_contig_igh+igk
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 5): skipped 14/23 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: nvw eox bdq ltz bdn cfs
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 6): skipped 2/16 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: adg
                [94miclust 7: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 9/14 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.015  mfreq 0.012  diff 0.003  abs(frac diff) 30%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0283    0.0206       1.4     0.0077     3654001128950720339-igh+6033021242520526803-igl
              0.0268    0.0192       1.4     0.0076     4202848474509221876_contig_igh+igl
              0.0206    0.0165       1.3     0.0041     4082963080611065754_contig_igh+igl
              0.0191    0.0151       1.3     0.0040     1788226129666372334_contig_igh+igl
              0.0138    0.0110       1.3     0.0028     0762988078235422090_contig_igh+igl
              0.0104    0.0082       1.3     0.0021     2101283333550381986_contig_igh+igl
              0.0069    0.0055       1.3     0.0014     3610536034903581483_contig_igh+igl
              0.0069    0.0055       1.3     0.0014     0073626956148989884_contig_igh+igl
              0.0026    0.0014       1.9     0.0012     6033021242520526803-igh+3654001128950720339-igl
          10 with highest+lowest ratios:
              0.0026    0.0014       1.9     0.0012     6033021242520526803-igh+3654001128950720339-igl
              0.0268    0.0192       1.4     0.0076     4202848474509221876_contig_igh+igl
              0.0283    0.0206       1.4     0.0077     3654001128950720339-igh+6033021242520526803-igl
              0.0191    0.0151       1.3     0.0040     1788226129666372334_contig_igh+igl
              0.0104    0.0082       1.3     0.0021     2101283333550381986_contig_igh+igl
              0.0104    0.0082       1.3     0.0021     2101283333550381986_contig_igh+igl
              0.0069    0.0055       1.3     0.0014     3610536034903581483_contig_igh+igl
              0.0069    0.0055       1.3     0.0014     0073626956148989884_contig_igh+igl
              0.0138    0.0110       1.3     0.0028     0762988078235422090_contig_igh+igl
              0.0206    0.0165       1.3     0.0041     4082963080611065754_contig_igh+igl
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 7): skipped 23/26 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: anu vyz dlr nwx dpz jrv hlm ipq fps ijy fjr
                [94miclust 10: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/11 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.030  mfreq 0.026  diff 0.003  abs(frac diff) 12%  ratio 1.1
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0340    0.0262       1.3     0.0079     8817536962094932636_contig_igh+igk
          10 with highest+lowest ratios:
              0.0340    0.0262       1.3     0.0079     8817536962094932636_contig_igh+igk
              0.0340    0.0262       1.3     0.0079     8817536962094932636_contig_igh+igk
          [93mwarning[0m nuc branch length 0.0005 and hamming frac 0.0014 very different (ratio 0.39) for branch between 8390513653445890708_contig_igh+igk --> 0152318295238543954_contig_igh+igk
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 10): skipped 19/21 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: ckw hou ach qwy dlt lqv awx jsv suy
  writing selection metrics to test/paired/new-results-slow/partition-new-simu/selection-metrics.yaml
      writing 90 chosen abs to test/paired/new-results-slow/get-selection-metrics-new-simu-chosen-abs.csv
      total time: 5.5
